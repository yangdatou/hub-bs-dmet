#INFO: **** input file is /Users/yangjunjie/work/hub-bs-dmet/fitting.py ****
import os, sys, typing
from typing import List, Tuple, Callable
sys.path.append(".")

from functools import reduce

import numpy, scipy
from scipy import linalg
from scipy.optimize import basinhopping

import jax
import jax.numpy as jnumpy
from jax.scipy.linalg import eigh
from jax.scipy.optimize import minimize

from pyscf import lib

class LossFunctionMixin(lib.StreamObject):
    spin   = None

    def __init__(self, h1e: numpy.ndarray, rdm1_tag: numpy.ndarray, fit_inds: numpy.ndarray,
                 nelecs: Tuple[int, int], loss_func_type: int = 1, stdout: typing.TextIO = sys.stdout):
        self.stdout = stdout

        spin = self.spin
        assert spin is not None

        # Convert fit_inds to a JAX array and extract dimensions
        fit_inds = jnumpy.asarray(fit_inds)
        nfrag    = fit_inds.shape[0]
        nimp     = fit_inds.shape[1]
        nsite    = nimp * nfrag

        ind_triu = jnumpy.triu_indices(nimp)
        num_triu = ind_triu[0].shape[0]
        num_parm = num_triu * spin
        
        # Ensure that dimensions of f1e and rdm1_tag match expected dimensions
        assert h1e.shape      == (nsite, nsite)
        assert rdm1_tag.shape == (nsite, nsite)

        self.h1e = h1e
        self.rdm1_tag = rdm1_tag
        self.fit_inds = fit_inds
        self.nelecs = nelecs
        self.loss_func_type = loss_func_type

        self.ind_triu = ind_triu
        self.num_triu = num_triu
        self.num_parm = num_parm

        self.nfrag    = nfrag
        self.nimp     = nimp
        self.nsite    = nsite

        h1es = jnumpy.zeros((spin, nsite, nsite))
        h1es = h1es.at[0].set(h1e)
        h1es = h1es.at[-1].set(h1e)
        self.h1es = h1es

        get_v1es = self._gen_get_v1es()
        get_rdm1 = self._gen_get_rdm1()
        
        # If the number of fragments is 1, then all the
        # types of loss functions are equivalent.
        assert loss_func_type == 1 or nfrag != 1

        if loss_func_type == 1:
            def func(xs):
                # Fill the correlation potential and calculate f1e
                v1es_fit = get_v1es(xs)
                f1es_fit = h1es + v1es_fit
                # Obtain the total RDM
                rdm1_fit = get_rdm1(f1es_fit)[0]
                # Calculate the difference between the target and fitted RDMs
                rdm1_err = rdm1_tag - rdm1_fit
                
                # The loss function is the norm of the RDM difference
                err = jnumpy.linalg.norm(rdm1_err)
                return err

        elif loss_func_type == 2:
            def func(xs):
                # Fill the correlation potential and calculate f1e
                v1es_fit = get_v1es(xs)
                f1es_fit = h1es + v1es_fit
                # Obtain the total RDM
                rdm1_fit = get_rdm1(f1es_fit)[0]
                # Calculate the difference between the target and fitted RDMs
                rdm1_err = rdm1_tag - rdm1_fit

                # The loss function is the sum of the norms of the RDM differences for each fragment
                err = sum([jnumpy.linalg.norm(rdm1_err[fit_ind][:, fit_ind]) for fit_ind in fit_inds])
                return err

        elif loss_func_type == 3:
            def func(xs):
                # Fill the correlation potential and calculate f1e
                v1es_fit = get_v1es(xs)
                f1es_fit = h1es + v1es_fit
                # Obtain the total RDM
                rdm1_fit = get_rdm1(f1es_fit)[0]
                # Calculate the difference between the target and fitted RDMs
                rdm1_err = rdm1_tag - rdm1_fit

                # The loss function is the sum of the norms of the RDM differences for each fragment
                err  = jnumpy.linalg.norm(rdm1_err)
                err += sum([jnumpy.linalg.norm(rdm1_err[fit_ind][:, fit_ind]) for fit_ind in fit_inds])
                return err

        else:
            raise ValueError("Invalid loss function type.")

        self.func = (lambda x: numpy.array(func(x)))
        self.grad = (lambda x: numpy.array(jax.grad(func)(x)))
        self.hess = (lambda x: numpy.array(jax.hessian(func)(x)))

        # Helper functions
        self._get_v1es = get_v1es
        self._get_rdm1 = get_rdm1

        self._dump_info()

    def _dump_info(self):
        info = self.__dict__
        self.stdout.write("\n\n#" * 20 + self.__class__.__name__ + "#" * 20 + "\n")
        self.stdout.write("Loss Function Info:\n")
        self.stdout.write("#" * (40 +  len(self.__class__.__name__)) + "\n")
        for k, v in info.items():
            self.stdout.write(f"{k} = {v}\n")

    def _gen_get_v1es(self):
        spin     = self.spin
        nsite    = self.nsite
        nimp     = self.nimp
        nfrag    = self.nfrag

        num_triu = self.num_triu
        ind_triu = self.ind_triu
        fit_inds = self.fit_inds

        def get_v1es(xs):
            assert xs.shape == (spin * num_triu,)
            v1es = jnumpy.zeros((spin, nsite, nsite))

            for fit_ind in fit_inds:
                ind_fit_0 = fit_ind[ind_triu[0]]
                ind_fit_1 = fit_ind[ind_triu[1]]
                
                for (s, v1e), x in zip(enumerate(v1es), jnumpy.split(xs, spin)):
                    v1e  = v1e.at[ind_fit_0, ind_fit_1].set(x)
                    v1e  = v1e + jnumpy.transpose(v1e) - jnumpy.diag(jnumpy.diag(v1e))
            
            return v1es

        return get_v1es

    def _gen_get_rdm1(self):
        raise NotImplementedError

class RestrictedSpinLossFunction(LossFunctionMixin):
    spin = 1
    def _gen_get_rdm1(self):
        spin     = self.spin
        nsite    = self.nsite
        nimp     = self.nimp
        nfrag    = self.nfrag

        nelec_alpha, nelec_beta = self.nelecs

        num_triu = self.num_triu
        ind_triu = self.ind_triu
        fit_inds = self.fit_inds

        def get_rdm1(f1es):
            assert f1es.shape  == (spin, nsite, nsite)
            assert nelec_alpha == nelec_beta

            f1e = f1es[0]
            mo_ene_alph, mo_coeff_alph = eigh(f1e)
            mo_ene_beta, mo_coeff_beta = mo_ene_alph, mo_coeff_alph

            occ_idx_alph = jnumpy.argsort(mo_ene_alph)[:self.nelecs[0]]
            occ_idx_beta = jnumpy.argsort(mo_ene_beta)[:self.nelecs[1]]

            coeff_occ_alph = mo_coeff_alph[:, occ_idx_alph]
            coeff_occ_beta = mo_coeff_beta[:, occ_idx_beta]

            rdm1_fit_alph  = jnumpy.dot(coeff_occ_alph, coeff_occ_alph.T)
            rdm1_fit_beta  = jnumpy.dot(coeff_occ_beta, coeff_occ_beta.T)

            gdm1 = jnumpy.zeros((2 * nsite, 2 * nsite))
            gdm1 = gdm1.at[:nsite, :nsite].set(rdm1_fit_alph)
            gdm1 = gdm1.at[nsite:, nsite:].set(rdm1_fit_beta)

            return rdm1_fit_alph + rdm1_fit_beta, gdm1

        return get_rdm1

RLF = RestrictedSpinLossFunction

from utils import print_matrix
from utils import RestrictedElectronicStructureProblem

from utils import solve_restricted_hartree_fock
from utils import solve_unrestricted_hartree_fock
from utils import solve_direct_spin1_full_configuration_interaction

from hub import build_hub_model
hub_u = 8.0
nsite  = 6
is_debug = False

for nelecs in [(2, 2), (3, 3), (4, 4)]:
    if is_debug and (not nelecs == (3, 3)):
        continue

    log = open(f"./log/hub-u-{hub_u:6.4f}-nelec-{nelecs[0]+nelecs[1]}" + ".log", "w")

    hub_obj         = build_hub_model(nsite, nelecs, hub_u)
    hub_obj.verbose = 4
    hub_obj.stdout  = log
    dm0_alph, dm0_beta = (lambda xs: (numpy.diag(xs[0]), numpy.diag(xs[1][::-1])))(numpy.asarray([[1, 0] for _ in range(nsite)]).reshape(2, -1))

    res_rhf = solve_restricted_hartree_fock(hub_obj,   dm0=dm0_alph+dm0_beta)
    res_uhf = solve_unrestricted_hartree_fock(hub_obj, dm0=(dm0_alph, dm0_beta))
    res_fci = solve_direct_spin1_full_configuration_interaction(hub_obj)

    ene_rhf = res_rhf.get_ene()
    ene_uhf = res_uhf.get_ene()
    ene_fci = res_fci.get_ene()

    r_rdm1_rhf = res_rhf.get_r_rdm1()
    r_rdm1_uhf = res_uhf.get_r_rdm1()
    r_rdm1_fci = res_fci.get_r_rdm1()
    rdm1_tag   = r_rdm1_fci

    for res in [res_rhf, res_uhf, res_fci]:
        ene    = res.get_ene()
        r_rdm1 = res.get_r_rdm1()
        u_rdm1 = res.get_u_rdm1()

        dm_err = numpy.abs(r_rdm1_fci - r_rdm1) 
        err_max = numpy.max(dm_err)
        err_avg = numpy.linalg.norm(dm_err) / numpy.size(dm_err)

        print(f"\n\n{res.__class__.__name__}", file=log)
        print(f"Energy: {ene:6.4f}, Error Max: {err_max:6.4e}, Avg: {err_avg:6.4e}", file=log)
        print_matrix(r_rdm1,    t="r_rdm1 = ", stdout=log)
        print_matrix(u_rdm1[0], t="u_rdm1_alph = ", stdout=log)
        print_matrix(u_rdm1[1], t="u_rdm1_beta = ", stdout=log)

    for igen_loss, LF in enumerate([RLF]):
        for (nimp, loss_func_type) in [(2, 1), (2, 2), (2, 3), (nsite, 1)]:
            if is_debug and (not (nimp == 2 and loss_func_type == 2)):
                continue
            
            fit_inds = numpy.asarray([[i+ifrag*nimp for i in range(nimp)] for ifrag in range(nsite // nimp)])
            kwargs   = {"stdout": log, "fit_inds": fit_inds, "nelecs": nelecs, "loss_func_type": loss_func_type}

            lf       = LF(hub_obj.h1, rdm1_tag, **kwargs)
            print("\n\n" + "#"*20, file=log)
            print(f"{lf.__class__.__name__}", file=log)
            print(f"nimp = {nimp}, nsite = {nsite}", file=log)
            print(f"nelecs = {nelecs}", file=log)
            print(f"loss_func_type = {loss_func_type}", file=log)

            x0 = numpy.zeros(lf.num_parm)

            global count, ymin
            count = 0
            ymin  = None

            def callback(x, y, accepted):
                # Fill the correlation potential and calculate f1e
                v1es_fit = lf._get_v1es(x)
                f1es_fit = lf.h1es + v1es_fit
                # Obtain the total RDM
                rdm1_fit, gdm1_fit = lf._get_rdm1(f1es_fit)
                # Calculate the difference between the target and fitted RDMs
                rdm1_err = jnumpy.abs(rdm1_tag - rdm1_fit)

                err_mean = jnumpy.linalg.norm(rdm1_err) / numpy.size(rdm1_err)
                err_max  = jnumpy.max(rdm1_err)

                global count, ymin
                ymin = y if ymin is None else min(ymin, y)
                
                if is_debug:
                    print(f"count = {count:4d}, y = {y:6.4e}, ymin = {ymin:6.4e}, " + f"x = [" + " ".join([f"{xi:6.4f}" for xi in x]) + "]")
                    for (s, f1e) in enumerate(f1es_fit):
                        print_matrix(f1e, t=f"f1e[{s}] = ")

                    print_matrix(rdm1_fit,   t="rdm1_fit = ")
                    print_matrix(rdm1_err,   t="rdm1_err = ")
                    assert count != 10

                print(f"count = {count:4d}, y = {y:6.4e}, ymin = {ymin:6.4e}, " + f"x = [" + " ".join([f"{xi:6.4f}" for xi in x])+"]", file=log)
                count += 1

            kwargs = {
                "method": "bfgs", 
                "jac": lf.grad, 
                "tol": 1e-4, 
                "options": {"disp": False, "maxiter": 1000}
                }



            res = basinhopping(
                lf.func, x0, niter=1000, T=0.1, stepsize=0.6, disp=False,
                callback=callback, minimizer_kwargs=kwargs, 
                niter_success=100, interval=10, 
                )

            x = res.x
            # f1e_fit  = f._f1e + f._fill_correlation_potential(x)
            # rdm1_fit = (lambda rdm1: rdm1[0] + rdm1[1])(f._get_rdm1(f1e_fit))
            # rdm1_err = jnumpy.abs(rdm1_tag - rdm1_fit)
            # err_mean = jnumpy.linalg.norm(rdm1_err) / numpy.size(rdm1_err)
            # err_max  = jnumpy.max(rdm1_err)

            # print(f"\nLoss Function = {res.fun:6.4e}, Error Mean: {err_mean:6.4e}, Max: {err_max:6.4e}, Count: {count}", file=log)
            # print(f"Success = {res.lowest_optimization_result.success}", file=log)
            # print(f"Message = {res.lowest_optimization_result.message}", file=log)
            # print(f"x = " + " ".join([f"{xi:6.4f}" for xi in x]), file=log)
            
            # print(res, file=log)

            # print_matrix(rdm1_fit,   t="rdm1_fit = ", stdout=log)
            # print_matrix(rdm1_tag,   t="rdm1_tag = ", stdout=log)
            # print("\n\n" + "#"*20, file=log)#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Junjies-MacBook-Air.local', release='22.5.0', version='Darwin Kernel Version 22.5.0: Thu Jun  8 22:21:34 PDT 2023; root:xnu-8796.121.3~7/RELEASE_ARM64_T8112', machine='arm64')  Threads 1
Python 3.11.3 | packaged by conda-forge | (main, Apr  6 2023, 08:58:31) [Clang 14.0.6 ]
numpy 1.24.3  scipy 1.10.1
Date: Fri Jul 21 12:15:32 2023
PySCF version 2.2.1
PySCF path  /Users/yangjunjie/packages/pyscf/pyscf-2.2.1/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 8
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        21.51


******** <class 'pyscf.scf.hf.RHF'> ********
method = RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-06
SCF conv_tol_grad = None
SCF max_cycles = 200
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/14/127wb84x5yx1jh4dxrvgcfkm0000gn/T/tmpmudr_sgk
max_memory 4000 MB (current use 0 MB)
Set gradient conv threshold to 0.001
init E= 12

WARN: HOMO 5 == LUMO 5

cycle= 1 E= 16  delta_E=    4  |g|= 2.67  |ddm|= 2.45
  HOMO = 6  LUMO = 7
cycle= 2 E= 17.3538326467681  delta_E= 1.35  |g|= 3.56  |ddm|= 2.91
  HOMO = 6.28024133330175  LUMO = 6.3882707135587
cycle= 3 E= 16.2095090198352  delta_E= -1.14  |g|= 3.25  |ddm|= 2.92
  HOMO = 6.07077202138113  LUMO = 6.68757876146135
cycle= 4 E= 16.7355392700346  delta_E= 0.526  |g|= 3.09  |ddm|= 2.87
  HOMO = 6.15788069112501  LUMO = 6.53862879315895
cycle= 5 E= 16.4132113375221  delta_E= -0.322  |g|=  2.7  |ddm|= 0.157
  HOMO = 6.3178886413319  LUMO = 6.34894127090406
cycle= 6 E= 16.0281350574998  delta_E= -0.385  |g|= 1.96  |ddm|= 0.232
  HOMO = 6.16363193192526  LUMO = 6.5211028949913
cycle= 7 E= 16.8102790877975  delta_E= 0.782  |g|= 4.51  |ddm|= 2.84
  HOMO = 6.31544405613237  LUMO = 6.35143468176838
cycle= 8 E= 16.0659720525864  delta_E= -0.744  |g|= 2.87  |ddm|= 0.285
  HOMO = 6.31633888298978  LUMO = 6.35051922785872
cycle= 9 E= 16.0625599270503  delta_E= -0.00341  |g|= 2.86  |ddm|= 0.00169
  HOMO = 6.25273893397137  LUMO = 6.41813899131494
cycle= 10 E= 16.3341306613363  delta_E= 0.272  |g|= 3.55  |ddm|= 0.12
  HOMO = 6.29148838818917  LUMO = 6.37632911768876
cycle= 11 E= 16.1616852577843  delta_E= -0.172  |g|= 3.13  |ddm|= 0.073
  HOMO = 6.29564648608856  LUMO = 6.37203123335255
cycle= 12 E= 16.0710941061355  delta_E= -0.0906  |g|= 2.06  |ddm|= 2.83
  HOMO = 6.19637029872078  LUMO = 6.48673488061021
cycle= 13 E= 16.3023924370745  delta_E= 0.231  |g|= 2.52  |ddm|= 0.142
  HOMO = 6.11034853637126  LUMO = 6.61240975722363
cycle= 14 E= 16.573138176837  delta_E= 0.271  |g|= 2.91  |ddm|= 0.141
  HOMO = 6.16524294491376  LUMO = 6.52825751314116
cycle= 15 E= 16.3908913750191  delta_E= -0.182  |g|= 2.66  |ddm|= 0.0924
  HOMO = 6.21083723592432  LUMO = 6.46541111735115
cycle= 16 E= 16.5445504180074  delta_E= 0.154  |g|= 4.01  |ddm|= 2.86
  HOMO = 6.10012679091759  LUMO = 6.59983863779381
cycle= 17 E= 17.2127365637856  delta_E= 0.668  |g|= 5.16  |ddm|= 0.206
  HOMO = 6.30609848302781  LUMO = 6.36108637549769
cycle= 18 E= 16.0505412751461  delta_E= -1.16  |g|= 2.01  |ddm|= 2.85
  HOMO = 6.28334687647529  LUMO = 6.38495737453039
cycle= 19 E= 16.1961205802663  delta_E= 0.146  |g|= 3.22  |ddm|= 2.83
  HOMO = 6.30542812678661  LUMO = 6.36178320291085
cycle= 20 E= 16.0518398391862  delta_E= -0.144  |g|= 2.02  |ddm|= 2.83
  HOMO = 6.07756482194165  LUMO = 6.67336894816077
cycle= 21 E= 16.7050287806836  delta_E= 0.653  |g|= 3.06  |ddm|= 0.358
  HOMO = 6.16158219634688  LUMO = 6.5333851961407
cycle= 22 E= 16.4019181573633  delta_E= -0.303  |g|= 2.68  |ddm|= 0.149
  HOMO = 6.00393426240403  LUMO = 6.92410638941902
cycle= 23 E= 17.2150400647764  delta_E= 0.813  |g|= 3.48  |ddm|= 0.367
  HOMO = 6.06436883790967  LUMO = 6.70163412050971
cycle= 24 E= 16.7655933319031  delta_E= -0.449  |g|= 3.13  |ddm|= 0.192
  HOMO = 6.0701960173958  LUMO = 6.68881547384681
cycle= 25 E= 16.7381889063364  delta_E= -0.0274  |g|=  3.1  |ddm|= 0.0125
  HOMO = 6.01204294774194  LUMO = 6.71566301525668
cycle= 26 E= 17.8468271738432  delta_E= 1.11  |g|=    6  |ddm|= 2.96
  HOMO = 6.23739274037088  LUMO = 6.43520878571835
cycle= 27 E= 16.4083486003438  delta_E= -1.44  |g|= 3.72  |ddm|= 0.416
  HOMO = 5.99135839175243  LUMO = 6.74388766080899
cycle= 28 E= 18.0068321450634  delta_E=  1.6  |g|= 6.19  |ddm|= 0.453
  HOMO = -16.4106885657044  LUMO = 50.8502534407279
cycle= 29 E= 31.751873428923  delta_E= 13.7  |g|= 4.47  |ddm|= 2.31
  HOMO = -2.93456639292423  LUMO = 23.9384017294304
cycle= 30 E= 31.3437275168695  delta_E= -0.408  |g|= 5.13  |ddm|= 0.12
  HOMO = -9.08846049934505  LUMO = 36.2191974521251
cycle= 31 E= 31.6246560120646  delta_E= 0.281  |g|= 4.69  |ddm|= 0.081
  HOMO = 5.54003634072583  LUMO = 7.43359607797827
cycle= 32 E= 21.9044143227812  delta_E= -9.72  |g|= 8.83  |ddm|= 1.68
  HOMO = -4.6641148464644  LUMO = 27.3869649815031
cycle= 33 E= 31.4573802520645  delta_E= 9.55  |g|= 4.96  |ddm|= 1.63
  HOMO = -5.34335280178306  LUMO = 28.7421295544008
cycle= 34 E= 31.4920327042752  delta_E= 0.0347  |g|=  4.9  |ddm|= 0.00995
  HOMO = 0.0481781921572376  LUMO = 18.0038656702851
cycle= 35 E= 30.9785417038585  delta_E= -0.513  |g|= 5.64  |ddm|= 0.138
  HOMO = 6.44563420330336  LUMO = 7.99467413474105
cycle= 36 E= 18.5174025433059  delta_E= -12.5  |g|= 3.72  |ddm|= 3.91
  HOMO = 6.26139199605705  LUMO = 6.40920682299955
cycle= 37 E= 16.1431991581516  delta_E= -2.37  |g|= 2.22  |ddm|= 0.996
  HOMO = 5.82664736145887  LUMO = 6.98079167334065
cycle= 38 E= 19.3878974464158  delta_E= 3.24  |g|= 7.48  |ddm|= 2.95
  HOMO = 15.0397690115497  LUMO = 16.97523255169
cycle= 39 E= 19.7469322554917  delta_E= 0.359  |g|= 3.07  |ddm|= 3.52
  HOMO = 12.7010520779926  LUMO = 14.6174960827052
cycle= 40 E= 19.6746453136068  delta_E= -0.0723  |g|= 3.14  |ddm|= 0.0329
  HOMO = 6.07570487429316  LUMO = 7.36065875607179
cycle= 41 E= 17.9025223129263  delta_E= -1.77  |g|= 3.73  |ddm|= 0.696
  HOMO = 6.12754798320957  LUMO = 7.47962910832491
cycle= 42 E= 18.0469244597542  delta_E= 0.144  |g|= 3.74  |ddm|= 0.0546
  HOMO = 6.00076192953318  LUMO = 7.03400203147019
cycle= 43 E= 17.4133395222449  delta_E= -0.634  |g|= 3.58  |ddm|= 0.243
  HOMO = 6.16918216456734  LUMO = 6.52280207433467
cycle= 44 E= 16.3791795807054  delta_E= -1.03  |g|= 2.64  |ddm|= 0.458
  HOMO = 6.28276473399823  LUMO = 6.38557754121387
cycle= 45 E= 16.1986196467668  delta_E= -0.181  |g|= 3.23  |ddm|= 2.84
  HOMO = 5.70956646662856  LUMO = 7.16043183809976
cycle= 46 E= 20.4281086306327  delta_E= 4.23  |g|= 8.17  |ddm|=    1
  HOMO = 4.18356966788017  LUMO = 9.89230654140566
cycle= 47 E= 28.2725099658654  delta_E= 7.84  |g|= 8.09  |ddm|= 1.24
  HOMO = 6.17571725445179  LUMO = 7.57397076767896
cycle= 48 E= 18.1504842200895  delta_E= -10.1  |g|= 3.75  |ddm|= 3.75
  HOMO = 5.37547573240282  LUMO = 7.71041591632204
cycle= 49 E= 23.2121773708834  delta_E= 5.06  |g|= 9.14  |ddm|= 3.49
  HOMO = 5.50799962630813  LUMO = 7.48667998289666
cycle= 50 E= 22.1709449458894  delta_E= -1.04  |g|= 8.91  |ddm|= 0.165
  HOMO = 6.19443782103176  LUMO = 7.60800434602126
cycle= 51 E= 18.1856585484858  delta_E= -3.99  |g|= 3.75  |ddm|= 3.44
  HOMO = 1.51319712918807  LUMO = 15.1019037491962
cycle= 52 E= 30.6048655383335  delta_E= 12.4  |g|= 6.11  |ddm|= 3.87
  HOMO = 0.200166519091202  LUMO = 17.7022202634139
cycle= 53 E= 30.9490870276662  delta_E= 0.344  |g|= 5.68  |ddm|= 0.0827
  HOMO = 6.06896199567495  LUMO = 6.63997845699622
cycle= 54 E= 17.4276901662818  delta_E= -13.5  |g|= 5.46  |ddm|= 2.25
  HOMO = -5.9497186069819  LUMO = 29.9522049840336
cycle= 55 E= 31.5194623716545  delta_E= 14.1  |g|= 4.86  |ddm|= 2.36
  HOMO = 7.10373769040589  LUMO = 8.80592291464857
cycle= 56 E= 18.9469537515342  delta_E= -12.6  |g|= 3.59  |ddm|= 3.96
  HOMO = -3.13938091013868  LUMO = 24.346590685697
cycle= 57 E= 31.3595754677511  delta_E= 12.4  |g|= 5.11  |ddm|= 3.95
  HOMO = -3.35685642445097  LUMO = 24.780076602551
cycle= 58 E= 31.3755974476903  delta_E= 0.016  |g|= 5.08  |ddm|= 0.00445
  HOMO = 13.3657846878968  LUMO = 15.2886931092608
cycle= 59 E= 19.69908411514  delta_E= -11.7  |g|= 3.12  |ddm|= 3.99
  HOMO = 8.25006589109918  LUMO = 10.0570949694222
cycle= 60 E= 19.2829209439593  delta_E= -0.416  |g|= 3.42  |ddm|= 0.18
  HOMO = 6.05067164071618  LUMO = 6.73436637477364
cycle= 61 E= 16.8350158421688  delta_E= -2.45  |g|= 3.19  |ddm|= 0.944
  HOMO = 5.34577270045821  LUMO = 7.76139217890912
cycle= 62 E= 23.4306037798111  delta_E=  6.6  |g|= 9.17  |ddm|= 3.29
  HOMO = 11.9538971987557  LUMO = 13.8616342140823
cycle= 63 E= 19.6419459010755  delta_E= -3.79  |g|= 3.16  |ddm|= 3.72
  HOMO = 235.202511620432  LUMO = 237.19961978276
cycle= 64 E= 19.9884411080958  delta_E= 0.346  |g|= 2.84  |ddm|= 0.163
  HOMO = 140.640404679137  LUMO = 142.635501653726
cycle= 65 E= 19.9804124037424  delta_E= -0.00803  |g|= 2.85  |ddm|= 0.00399
  HOMO = 15.2904753418424  LUMO = 17.2274741349769
cycle= 66 E= 19.7528171714  delta_E= -0.228  |g|= 3.07  |ddm|= 0.109
  HOMO = 4.44452196573071  LUMO = 9.39855880162692
cycle= 67 E= 27.6451868832483  delta_E= 7.89  |g|= 8.43  |ddm|=  3.9
  HOMO = 1.9875387902251  LUMO = 14.1659816333205
cycle= 68 E= 30.421023782531  delta_E= 2.78  |g|= 6.32  |ddm|= 0.527
  HOMO = 0.601092932495917  LUMO = 16.9070680798248
cycle= 69 E= 30.8628602853061  delta_E= 0.442  |g|= 5.79  |ddm|= 0.103
  HOMO = -12.5481038919716  LUMO = 43.130882457028
cycle= 70 E= 31.6977933957869  delta_E= 0.835  |g|= 4.56  |ddm|= 0.228
  HOMO = 15.1652324707153  LUMO = 17.1014735907876
cycle= 71 E= 19.749911954956  delta_E= -11.9  |g|= 3.07  |ddm|=    4
  HOMO = 11.5456322194278  LUMO = 13.4477906703378
cycle= 72 E= 19.6211287026808  delta_E= -0.129  |g|= 3.18  |ddm|= 0.0583
  HOMO = 11.3397135219628  LUMO = 13.2387915833442
cycle= 73 E= 19.6096789409963  delta_E= -0.0114  |g|= 3.19  |ddm|= 0.00508
  HOMO = 11.4672091162734  LUMO = 13.368217069406
cycle= 74 E= 19.6168485457896  delta_E= 0.00717  |g|= 3.18  |ddm|= 0.00318
  HOMO = 10.1297931141953  LUMO = 12.0058894448679
cycle= 75 E= 19.525287715277  delta_E= -0.0916  |g|= 3.25  |ddm|= 0.0402
  HOMO = 10.8075602580726  LUMO = 12.6976878726714
cycle= 76 E= 19.5765944289888  delta_E= 0.0513  |g|= 3.21  |ddm|= 0.0224
  HOMO = 9.40626699396376  LUMO = 11.2627093481435
cycle= 77 E= 19.4545862667401  delta_E= -0.122  |g|=  3.3  |ddm|= 0.0529
  HOMO = 4.84396906298183  LUMO = 8.65616584618337
cycle= 78 E= 26.2751427926794  delta_E= 6.82  |g|= 8.95  |ddm|= 3.82
  HOMO = 4.84448511947152  LUMO = 8.65522028806788
cycle= 79 E= 26.2729506873402  delta_E= -0.00219  |g|= 8.95  |ddm|= 0.00035
  HOMO = 4.80879843408346  LUMO = 8.72070355433781
cycle= 80 E= 26.4215765381084  delta_E= 0.149  |g|= 8.91  |ddm|= 0.0238
  HOMO = 0.879282148395719  LUMO = 16.3558744885827
cycle= 81 E= 30.7945294186834  delta_E= 4.37  |g|= 5.88  |ddm|= 0.809
  HOMO = -14.4302666495041  LUMO = 46.8921177066348
cycle= 82 E= 31.7267976899164  delta_E= 0.932  |g|= 4.51  |ddm|= 0.253
  HOMO = 76.5995441296524  LUMO = 78.5902754341319
cycle= 83 E= 19.9630142385682  delta_E= -11.8  |g|= 2.87  |ddm|=    4
  HOMO = 12.7013792527465  LUMO = 14.6178267077122
cycle= 84 E= 19.6746583208949  delta_E= -0.288  |g|= 3.14  |ddm|= 0.136
  HOMO = 13.9621936341974  LUMO = 15.8901018109299
cycle= 85 E= 19.718078458988  delta_E= 0.0434  |g|=  3.1  |ddm|= 0.0197
  HOMO = 55.8362152797699  LUMO = 57.8231844853656
cycle= 86 E= 19.9480551900419  delta_E= 0.23  |g|= 2.88  |ddm|= 0.109
  HOMO = 6.0808669090555  LUMO = 7.37374014676337
cycle= 87 E= 17.9192038277293  delta_E= -2.03  |g|= 3.73  |ddm|= 0.813
  HOMO = 6.02492541119533  LUMO = 6.69827445647351
cycle= 88 E= 17.7491538664387  delta_E= -0.17  |g|= 5.88  |ddm|= 3.11
  HOMO = 3.4615485704743  LUMO = 11.2805887552654
cycle= 89 E= 29.3853760874966  delta_E= 11.6  |g|= 7.31  |ddm|=  1.9
  HOMO = 4.99902612021965  LUMO = 8.3740398334954
cycle= 90 E= 25.5556129464446  delta_E= -3.83  |g|= 9.11  |ddm|= 0.648
  HOMO = 3.23487229499988  LUMO = 11.7209838782342
cycle= 91 E= 29.6182232720119  delta_E= 4.06  |g|= 7.11  |ddm|= 0.693
  HOMO = 1.78333370052477  LUMO = 14.5686023761777
cycle= 92 E= 30.5055349488679  delta_E= 0.887  |g|= 6.22  |ddm|= 0.189
  HOMO = 0.855149773766318  LUMO = 16.4036701749442
cycle= 93 E= 30.8007694244235  delta_E= 0.295  |g|= 5.87  |ddm|= 0.0692
  HOMO = -0.666183144356298  LUMO = 19.4229087162881
cycle= 94 E= 31.0978725147628  delta_E= 0.297  |g|= 5.48  |ddm|= 0.0741
  HOMO = 0.761906490897519  LUMO = 16.5883797091269
cycle= 95 E= 30.8243042179715  delta_E= -0.274  |g|= 5.84  |ddm|= 0.0684
  HOMO = 0.832697240015632  LUMO = 16.4481422486193
cycle= 96 E= 30.8065192858192  delta_E= -0.0178  |g|= 5.86  |ddm|= 0.00431
  HOMO = 6.48533146176858  LUMO = 8.0489600377374
cycle= 97 E= 18.5555874362015  delta_E= -12.3  |g|= 3.71  |ddm|= 3.91
  HOMO = 4.42272593165368  LUMO = 9.43957630373974
cycle= 98 E= 27.7042413643305  delta_E= 9.15  |g|=  8.4  |ddm|= 3.78
  HOMO = 19.9987152515066  LUMO = 21.9551508248428
cycle= 99 E= 19.8279364478405  delta_E= -7.88  |g|=    3  |ddm|= 3.91
  HOMO = 26.440222752882  LUMO = 28.4095758148916
cycle= 100 E= 19.8784580740585  delta_E= 0.0505  |g|= 2.95  |ddm|= 0.024
  HOMO = 9.24611776188852  LUMO = 11.097316551289
cycle= 101 E= 19.43595557714  delta_E= -0.443  |g|= 3.32  |ddm|= 0.199
  HOMO = 8.70547524683808  LUMO = 10.5356494546925
cycle= 102 E= 19.3622414336292  delta_E= -0.0737  |g|= 3.37  |ddm|= 0.0312
  HOMO = 5.346279303628  LUMO = 7.7605204053966
cycle= 103 E= 23.4269265883725  delta_E= 4.06  |g|= 9.17  |ddm|= 3.68
  HOMO = 1.5792587452299  LUMO = 14.9714187884242
cycle= 104 E= 30.5817623173335  delta_E= 7.15  |g|= 6.13  |ddm|= 1.21
  HOMO = 1.08592595060813  LUMO = 15.9467661496278
cycle= 105 E= 30.7384174806466  delta_E= 0.157  |g|= 5.95  |ddm|= 0.0367
  HOMO = -5.53507462000336  LUMO = 29.1247049417568
cycle= 106 E= 31.5010346695353  delta_E= 0.763  |g|= 4.89  |ddm|= 0.199
  HOMO = 52.3637867976142  LUMO = 54.3498069817469
cycle= 107 E= 19.9442867238066  delta_E= -11.6  |g|= 2.89  |ddm|=    4
  HOMO = -0.723573816857937  LUMO = 19.536992607195
cycle= 108 E= 31.1062876445739  delta_E= 11.2  |g|= 5.47  |ddm|= 3.99
  HOMO = 0.665254635979886  LUMO = 16.7798986388819
cycle= 109 E= 30.8477743794911  delta_E= -0.259  |g|= 5.81  |ddm|= 0.0649
  HOMO = 0.499552264102321  LUMO = 17.1083713941537
cycle= 110 E= 30.8859682475403  delta_E= 0.0382  |g|= 5.76  |ddm|= 0.00935
  HOMO = 5.55407660909928  LUMO = 7.41046653691821
cycle= 111 E= 21.7860328264313  delta_E= -9.1  |g|= 8.79  |ddm|= 1.52
  HOMO = 14.2128839846188  LUMO = 16.1427043418143
cycle= 112 E= 19.7253640397792  delta_E= -2.06  |g|= 3.09  |ddm|= 3.66
  HOMO = -5.11703278555607  LUMO = 28.2905506459481
cycle= 113 E= 31.4809836757053  delta_E= 11.8  |g|= 4.92  |ddm|= 3.99
  HOMO = -53.2254354114326  LUMO = 124.462001260474
cycle= 114 E= 31.9084538011745  delta_E= 0.427  |g|= 4.18  |ddm|= 0.133
  HOMO = 10.7001792077761  LUMO = 12.5883022599726
cycle= 115 E= 19.5692225839171  delta_E= -12.3  |g|= 3.22  |ddm|= 3.99
  HOMO = 7.8891831284276  LUMO = 9.67260131652823
cycle= 116 E= 19.2039656099701  delta_E= -0.365  |g|= 3.46  |ddm|= 0.154
  HOMO = 6.3088456351984  LUMO = 7.79618489067289
cycle= 117 E= 18.361452201846  delta_E= -0.843  |g|= 3.74  |ddm|= 0.327
  HOMO = 6.19539822653715  LUMO = 6.48334844167393
cycle= 118 E= 16.6281845957025  delta_E= -1.73  |g|= 4.17  |ddm|= 3.08
  HOMO = 6.01341193025857  LUMO = 7.14554678628545
cycle= 119 E= 17.5968706057683  delta_E= 0.969  |g|= 3.66  |ddm|= 2.98
  HOMO = 5.52675211739493  LUMO = 7.45555648966744
cycle= 120 E= 22.0155563891436  delta_E= 4.42  |g|= 8.87  |ddm|= 3.33
  HOMO = 6.98367540787187  LUMO = 8.66711477357311
cycle= 121 E= 18.8907148774154  delta_E= -3.12  |g|= 3.61  |ddm|= 3.54
  HOMO = 10.3112472715219  LUMO = 12.1914447305439
cycle= 122 E= 19.5402127493455  delta_E= 0.649  |g|= 3.24  |ddm|= 0.266
  HOMO = 3.58379267149933  LUMO = 11.0438303064084
cycle= 123 E= 29.2418057186579  delta_E=  9.7  |g|= 7.42  |ddm|= 3.93
  HOMO = 1.39985736029897  LUMO = 15.3258660223478
cycle= 124 E= 30.6428642047567  delta_E=  1.4  |g|= 6.06  |ddm|= 0.294
  HOMO = 0.558650979892585  LUMO = 16.9912017424789
cycle= 125 E= 30.8726309017462  delta_E= 0.23  |g|= 5.78  |ddm|= 0.055
  HOMO = -1.22407490804331  LUMO = 20.5323376116111
cycle= 126 E= 31.1736455280936  delta_E= 0.301  |g|= 5.38  |ddm|= 0.0764
  HOMO = 0.0914471496727771  LUMO = 17.9179806217599
cycle= 127 E= 30.9703210987094  delta_E= -0.203  |g|= 5.65  |ddm|= 0.0522
  HOMO = -3.80662058005569  LUMO = 25.6767667261061
cycle= 128 E= 31.4063451362315  delta_E= 0.436  |g|= 5.03  |ddm|= 0.115
  HOMO = 18.1936956561159  LUMO = 20.1442913220721
cycle= 129 E= 19.8052492199533  delta_E= -11.6  |g|= 3.02  |ddm|= 3.99
  HOMO = 17.0904902362234  LUMO = 19.0366744829823
cycle= 130 E= 19.7881772827803  delta_E= -0.0171  |g|= 3.04  |ddm|= 0.00797
  HOMO = 6.44311069291746  LUMO = 7.99118171419648
cycle= 131 E= 18.5148849587888  delta_E= -1.27  |g|= 3.72  |ddm|= 0.52
  HOMO = 11.6251875285645  LUMO = 13.528485826267
cycle= 132 E= 19.6253736609491  delta_E= 1.11  |g|= 3.18  |ddm|= 0.447
  HOMO = 6.000001441707  LUMO = 6.99852979536773
cycle= 133 E= 17.3512220445717  delta_E= -2.27  |g|= 3.55  |ddm|= 0.879
  HOMO = 4.70771411032777  LUMO = 8.9071802055046
cycle= 134 E= 26.8116404770168  delta_E= 9.46  |g|= 8.78  |ddm|= 3.57
  HOMO = 6.25359735579972  LUMO = 7.70882270334972
cycle= 135 E= 18.2835880391867  delta_E= -8.53  |g|= 3.75  |ddm|=  3.7
  HOMO = 6.05227858608704  LUMO = 7.29583318743961
cycle= 136 E= 17.8167587805972  delta_E= -0.467  |g|= 3.71  |ddm|= 0.176
  HOMO = 4.0566499770467  LUMO = 10.1342969040113
cycle= 137 E= 28.5237896816616  delta_E= 10.7  |g|= 7.94  |ddm|= 3.73
  HOMO = 3.82251027578031  LUMO = 10.5832701480095
cycle= 138 E= 28.91629248723  delta_E= 0.393  |g|= 7.67  |ddm|= 0.0716
  HOMO = 3.56512147945207  LUMO = 11.0799551454664
cycle= 139 E= 29.2646513202719  delta_E= 0.348  |g|= 7.41  |ddm|= 0.0657
  HOMO = 3.28275621531956  LUMO = 11.6278165529268
cycle= 140 E= 29.5722769631798  delta_E= 0.308  |g|= 7.15  |ddm|= 0.0601
  HOMO = -0.0116931399639112  LUMO = 18.1227187071613
cycle= 141 E= 30.9897082775504  delta_E= 1.42  |g|= 5.63  |ddm|= 0.313
  HOMO = 9.34315404078522  LUMO = 11.1975756785285
cycle= 142 E= 19.4473949250446  delta_E= -11.5  |g|= 3.31  |ddm|= 3.97
  HOMO = 17.0271867430865  LUMO = 18.9730937629477
cycle= 143 E= 19.7871063531422  delta_E= 0.34  |g|= 3.04  |ddm|= 0.151
  HOMO = 19.5392735923529  LUMO = 21.4943580231519
cycle= 144 E= 19.8226787458757  delta_E= 0.0356  |g|= 3.01  |ddm|= 0.0166
  HOMO = 22.5437377054966  LUMO = 24.5063939836089
cycle= 145 E= 19.8522092675201  delta_E= 0.0295  |g|= 2.98  |ddm|= 0.014
  HOMO = 16.9004052799443  LUMO = 18.8457483780421
cycle= 146 E= 19.7849286259869  delta_E= -0.0673  |g|= 3.04  |ddm|= 0.0316
  HOMO = 15.9569775580051  LUMO = 17.8977225522237
cycle= 147 E= 19.7672075256098  delta_E= -0.0177  |g|= 3.06  |ddm|= 0.00822
  HOMO = 10.7215953150973  LUMO = 12.6101240490777
cycle= 148 E= 19.5707133688318  delta_E= -0.196  |g|= 3.22  |ddm|= 0.0885
  HOMO = 4.86160993596624  LUMO = 8.62386638133686
cycle= 149 E= 26.1994795452907  delta_E= 6.63  |g|= 8.97  |ddm|= 3.83
  HOMO = 4.8615233746775  LUMO = 8.62402475124922
cycle= 150 E= 26.199854501959  delta_E= 0.000375  |g|= 8.97  |ddm|= 5.97e-05
  HOMO = 4.91822175660173  LUMO = 8.52055086558162
cycle= 151 E= 25.9462400821898  delta_E= -0.254  |g|= 9.04  |ddm|= 0.0402
  HOMO = -2.70048874506938  LUMO = 23.4719688074084
cycle= 152 E= 31.3246425472762  delta_E= 5.38  |g|= 5.16  |ddm|= 1.01
  HOMO = 34.0442506183271  LUMO = 36.0215458806738
cycle= 153 E= 19.9097407757272  delta_E= -11.4  |g|= 2.92  |ddm|=    4
  HOMO = 7.27063363712081  LUMO = 8.99519000080363
cycle= 154 E= 19.0155367760899  delta_E= -0.894  |g|= 3.56  |ddm|= 0.386
  HOMO = 16.2674129267806  LUMO = 18.2097543075924
cycle= 155 E= 19.773352770498  delta_E= 0.758  |g|= 3.05  |ddm|= 0.322
  HOMO = -16.6202519790155  LUMO = 51.2691206114846
cycle= 156 E= 31.7542609798601  delta_E=   12  |g|= 4.46  |ddm|=    4
  HOMO = 7.28609609055326  LUMO = 9.01254247612486
cycle= 157 E= 19.0214056911948  delta_E= -12.7  |g|= 3.55  |ddm|= 3.97
  HOMO = 17.337428580528  LUMO = 19.2846675477716
cycle= 158 E= 19.7922537641521  delta_E= 0.771  |g|= 3.03  |ddm|= 0.328
  HOMO = 7.15451097579587  LUMO = 8.86391191986373
cycle= 159 E= 18.9688981956763  delta_E= -0.823  |g|= 3.58  |ddm|= 0.349
  HOMO = 5.47732873287157  LUMO = 7.53788579152669
cycle= 160 E= 22.4210747708065  delta_E= 3.45  |g|= 8.98  |ddm|= 3.57
  HOMO = 6.27439073099999  LUMO = 7.74234605952578
cycle= 161 E= 18.3141972608715  delta_E= -4.11  |g|= 3.74  |ddm|= 3.47
  HOMO = 6.364496015601  LUMO = 7.8794616727851
cycle= 162 E= 18.4302046838178  delta_E= 0.116  |g|= 3.73  |ddm|= 0.0439
  HOMO = 6.13473281453344  LUMO = 7.49445456305494
cycle= 163 E= 18.0638115071439  delta_E= -0.366  |g|= 3.75  |ddm|= 0.138
  HOMO = 6.26101416589432  LUMO = 7.72087803073188
cycle= 164 E= 18.2947030946587  delta_E= 0.231  |g|= 3.74  |ddm|= 0.0871
  HOMO = 4.39928575926758  LUMO = 9.48373687315925
cycle= 165 E= 27.7662672908636  delta_E= 9.47  |g|= 8.37  |ddm|= 3.75
  HOMO = 1.72387530638913  LUMO = 14.6859209484402
cycle= 166 E= 30.5285401401922  delta_E= 2.76  |g|=  6.2  |ddm|= 0.53
  HOMO = -1.79602149740317  LUMO = 21.6705772356959
cycle= 167 E= 31.2393760168578  delta_E= 0.711  |g|= 5.28  |ddm|= 0.175
  HOMO = 3.00975187741534  LUMO = 12.1598665969811
cycle= 168 E= 29.8142896828731  delta_E= -1.43  |g|= 6.93  |ddm|= 0.329
  HOMO = 16.1659516045401  LUMO = 18.1077808083004
cycle= 169 E= 19.7713803174324  delta_E=  -10  |g|= 3.05  |ddm|= 3.96
  HOMO = 16.1920150500125  LUMO = 18.1339766915654
cycle= 170 E= 19.7718902745531  delta_E= 0.00051  |g|= 3.05  |ddm|= 0.000236
  HOMO = 6.11660330564988  LUMO = 6.57900767273012
cycle= 171 E= 17.1035976648381  delta_E= -2.67  |g|= 4.99  |ddm|= 3.35
  HOMO = 0.937164549501878  LUMO = 16.2412505392974
cycle= 172 E= 30.7793039428915  delta_E= 13.7  |g|=  5.9  |ddm|= 2.28
  HOMO = 1.70610372738903  LUMO = 14.7209936548833
cycle= 173 E= 30.5352853065091  delta_E= -0.244  |g|= 6.19  |ddm|= 0.0572
  HOMO = 1.53328644594857  LUMO = 15.0622189614876
cycle= 174 E= 30.597916573121  delta_E= 0.0626  |g|= 6.11  |ddm|= 0.0144
  HOMO = 1.47838975323348  LUMO = 15.1706716831484
cycle= 175 E= 30.6167504380496  delta_E= 0.0188  |g|= 6.09  |ddm|= 0.00437
  HOMO = 1.13426182150381  LUMO = 15.8511160910852
cycle= 176 E= 30.7245588111891  delta_E= 0.108  |g|= 5.96  |ddm|= 0.0253
  HOMO = 0.463384663964223  LUMO = 17.1800871018389
cycle= 177 E= 30.8939807077435  delta_E= 0.169  |g|= 5.75  |ddm|= 0.041
  HOMO = 0.378330877753077  LUMO = 17.3487654549967
cycle= 178 E= 30.9123899299567  delta_E= 0.0184  |g|= 5.73  |ddm|= 0.00454
  HOMO = 0.857492345780024  LUMO = 16.3990303961638
cycle= 179 E= 30.8001664319262  delta_E= -0.112  |g|= 5.87  |ddm|= 0.0274
  HOMO = 7.08671548813778  LUMO = 8.78639267925883
cycle= 180 E= 18.9393652701654  delta_E= -11.9  |g|= 3.59  |ddm|= 3.94
  HOMO = 13.4933107120275  LUMO = 15.4173459673127
cycle= 181 E= 19.7033580102883  delta_E= 0.764  |g|= 3.11  |ddm|= 0.32
  HOMO = 12.8984275372373  LUMO = 14.8169021377028
cycle= 182 E= 19.6823073151197  delta_E= -0.0211  |g|= 3.13  |ddm|= 0.00954
  HOMO = 4.9082196538605  LUMO = 8.53876600876784
cycle= 183 E= 25.9921667412547  delta_E= 6.31  |g|= 9.02  |ddm|= 3.84
  HOMO = -40.2636155007316  LUMO = 98.5414350301771
cycle= 184 E= 31.8822806794093  delta_E= 5.89  |g|= 4.23  |ddm|= 1.17
  HOMO = 3.33568833122201  LUMO = 11.5249091994351
cycle= 185 E= 29.5195554410079  delta_E= -2.36  |g|=  7.2  |ddm|= 0.577
  HOMO = 7.59354181785212  LUMO = 9.35253781795152
cycle= 186 E= 19.1243504534657  delta_E= -10.4  |g|=  3.5  |ddm|= 3.91
  HOMO = 8.29368402736286  LUMO = 10.1032097135948
cycle= 187 E= 19.2913850909049  delta_E= 0.167  |g|= 3.41  |ddm|= 0.0683
  HOMO = 9.31131003217674  LUMO = 11.1646898809833
cycle= 188 E= 19.4436930889308  delta_E= 0.152  |g|= 3.31  |ddm|= 0.064
  HOMO = 9.34577456361499  LUMO = 11.200281259621
cycle= 189 E= 19.4476973374474  delta_E= 0.004  |g|= 3.31  |ddm|= 0.00171
  HOMO = 11.246801591168  LUMO = 13.1444246594131
cycle= 190 E= 19.6042819921102  delta_E= 0.157  |g|= 3.19  |ddm|= 0.0681
  HOMO = 9.80777418875045  LUMO = 11.6758433761861
cycle= 191 E= 19.4962462785862  delta_E= -0.108  |g|= 3.28  |ddm|= 0.0472
  HOMO = 11.2823590416925  LUMO = 13.1805439166419
cycle= 192 E= 19.6063650230452  delta_E= 0.11  |g|= 3.19  |ddm|= 0.0482
  HOMO = 4.72808700280255  LUMO = 8.86948475803633
cycle= 193 E= 26.736531903213  delta_E= 7.13  |g|= 8.81  |ddm|= 3.86
  HOMO = 4.72796676614316  LUMO = 8.86970706820113
cycle= 194 E= 26.736980198168  delta_E= 0.000448  |g|= 8.81  |ddm|= 7.27e-05
  HOMO = 4.80667580414109  LUMO = 8.72460447583972
cycle= 195 E= 26.4302299926847  delta_E= -0.307  |g|= 8.91  |ddm|= 0.0494
  HOMO = 4.60390741728533  LUMO = 9.10005972049557
cycle= 196 E= 27.1691167213707  delta_E= 0.739  |g|= 8.65  |ddm|= 0.12
  HOMO = 3.70743667625074  LUMO = 10.8049665413595
cycle= 197 E= 29.0813711687919  delta_E= 1.91  |g|= 7.55  |ddm|= 0.334
  HOMO = -2.46788086820538  LUMO = 23.0085513904004
cycle= 198 E= 31.3045638682633  delta_E= 2.22  |g|= 5.19  |ddm|= 0.489
  HOMO = -1526.71446428528  LUMO = 3071.42933370692
cycle= 199 E= 31.9965180659199  delta_E= 0.692  |g|= 4.01  |ddm|= 0.213
  HOMO = 12.8419214906714  LUMO = 14.7598249804369
cycle= 200 E= 19.6801509900191  delta_E= -12.3  |g|= 3.13  |ddm|=    4
SCF not converged.
SCF energy = 19.6801509900191
#INFO: **** input file is /Users/yangjunjie/work/hub-bs-dmet/fitting.py ****
import os, sys, typing
from typing import List, Tuple, Callable
sys.path.append(".")

from functools import reduce

import numpy, scipy
from scipy import linalg
from scipy.optimize import basinhopping

import jax
import jax.numpy as jnumpy
from jax.scipy.linalg import eigh
from jax.scipy.optimize import minimize

from pyscf import lib

class LossFunctionMixin(lib.StreamObject):
    spin   = None

    def __init__(self, h1e: numpy.ndarray, rdm1_tag: numpy.ndarray, fit_inds: numpy.ndarray,
                 nelecs: Tuple[int, int], loss_func_type: int = 1, stdout: typing.TextIO = sys.stdout):
        self.stdout = stdout

        spin = self.spin
        assert spin is not None

        # Convert fit_inds to a JAX array and extract dimensions
        fit_inds = jnumpy.asarray(fit_inds)
        nfrag    = fit_inds.shape[0]
        nimp     = fit_inds.shape[1]
        nsite    = nimp * nfrag

        ind_triu = jnumpy.triu_indices(nimp)
        num_triu = ind_triu[0].shape[0]
        num_parm = num_triu * spin
        
        # Ensure that dimensions of f1e and rdm1_tag match expected dimensions
        assert h1e.shape      == (nsite, nsite)
        assert rdm1_tag.shape == (nsite, nsite)

        self.h1e = h1e
        self.rdm1_tag = rdm1_tag
        self.fit_inds = fit_inds
        self.nelecs = nelecs
        self.loss_func_type = loss_func_type

        self.ind_triu = ind_triu
        self.num_triu = num_triu
        self.num_parm = num_parm

        self.nfrag    = nfrag
        self.nimp     = nimp
        self.nsite    = nsite

        h1es = jnumpy.zeros((spin, nsite, nsite))
        h1es = h1es.at[0].set(h1e)
        h1es = h1es.at[-1].set(h1e)
        self.h1es = h1es

        get_v1es = self._gen_get_v1es()
        get_rdm1 = self._gen_get_rdm1()
        
        # If the number of fragments is 1, then all the
        # types of loss functions are equivalent.
        assert loss_func_type == 1 or nfrag != 1

        if loss_func_type == 1:
            def func(xs):
                # Fill the correlation potential and calculate f1e
                v1es_fit = get_v1es(xs)
                f1es_fit = h1es + v1es_fit
                # Obtain the total RDM
                rdm1_fit = get_rdm1(f1es_fit)[0]
                # Calculate the difference between the target and fitted RDMs
                rdm1_err = rdm1_tag - rdm1_fit
                
                # The loss function is the norm of the RDM difference
                err = jnumpy.linalg.norm(rdm1_err)
                return err

        elif loss_func_type == 2:
            def func(xs):
                # Fill the correlation potential and calculate f1e
                v1es_fit = get_v1es(xs)
                f1es_fit = h1es + v1es_fit
                # Obtain the total RDM
                rdm1_fit = get_rdm1(f1es_fit)[0]
                # Calculate the difference between the target and fitted RDMs
                rdm1_err = rdm1_tag - rdm1_fit

                # The loss function is the sum of the norms of the RDM differences for each fragment
                err = sum([jnumpy.linalg.norm(rdm1_err[fit_ind][:, fit_ind]) for fit_ind in fit_inds])
                return err

        elif loss_func_type == 3:
            def func(xs):
                # Fill the correlation potential and calculate f1e
                v1es_fit = get_v1es(xs)
                f1es_fit = h1es + v1es_fit
                # Obtain the total RDM
                rdm1_fit = get_rdm1(f1es_fit)[0]
                # Calculate the difference between the target and fitted RDMs
                rdm1_err = rdm1_tag - rdm1_fit

                # The loss function is the sum of the norms of the RDM differences for each fragment
                err  = jnumpy.linalg.norm(rdm1_err)
                err += sum([jnumpy.linalg.norm(rdm1_err[fit_ind][:, fit_ind]) for fit_ind in fit_inds])
                return err

        else:
            raise ValueError("Invalid loss function type.")

        self.func = (lambda x: numpy.array(func(x)))
        self.grad = (lambda x: numpy.array(jax.grad(func)(x)))
        self.hess = (lambda x: numpy.array(jax.hessian(func)(x)))

        # Helper functions
        self._get_v1es = get_v1es
        self._get_rdm1 = get_rdm1

        self._dump_info()

    def _dump_info(self):
        info = self.__dict__
        self.stdout.write("\n\n#" * 20 + self.__class__.__name__ + "#" * 20 + "\n")
        self.stdout.write("Loss Function Info:\n")
        self.stdout.write("#" * (40 +  len(self.__class__.__name__)) + "\n")
        for k, v in info.items():
            self.stdout.write(f"{k} = {v}\n")

    def _gen_get_v1es(self):
        spin     = self.spin
        nsite    = self.nsite
        nimp     = self.nimp
        nfrag    = self.nfrag

        num_triu = self.num_triu
        ind_triu = self.ind_triu
        fit_inds = self.fit_inds

        def get_v1es(xs):
            assert xs.shape == (spin * num_triu,)
            v1es = jnumpy.zeros((spin, nsite, nsite))

            for fit_ind in fit_inds:
                ind_fit_0 = fit_ind[ind_triu[0]]
                ind_fit_1 = fit_ind[ind_triu[1]]
                
                for (s, v1e), x in zip(enumerate(v1es), jnumpy.split(xs, spin)):
                    v1e  = v1e.at[ind_fit_0, ind_fit_1].set(x)
                    v1e  = v1e + jnumpy.transpose(v1e) - jnumpy.diag(jnumpy.diag(v1e))
            
            return v1es

        return get_v1es

    def _gen_get_rdm1(self):
        raise NotImplementedError

class RestrictedSpinLossFunction(LossFunctionMixin):
    spin = 1
    def _gen_get_rdm1(self):
        spin     = self.spin
        nsite    = self.nsite
        nimp     = self.nimp
        nfrag    = self.nfrag

        nelec_alpha, nelec_beta = self.nelecs

        num_triu = self.num_triu
        ind_triu = self.ind_triu
        fit_inds = self.fit_inds

        def get_rdm1(f1es):
            assert f1es.shape  == (spin, nsite, nsite)
            assert nelec_alpha == nelec_beta

            f1e = f1es[0]
            mo_ene_alph, mo_coeff_alph = eigh(f1e)
            mo_ene_beta, mo_coeff_beta = mo_ene_alph, mo_coeff_alph

            occ_idx_alph = jnumpy.argsort(mo_ene_alph)[:self.nelecs[0]]
            occ_idx_beta = jnumpy.argsort(mo_ene_beta)[:self.nelecs[1]]

            coeff_occ_alph = mo_coeff_alph[:, occ_idx_alph]
            coeff_occ_beta = mo_coeff_beta[:, occ_idx_beta]

            rdm1_fit_alph  = jnumpy.dot(coeff_occ_alph, coeff_occ_alph.T)
            rdm1_fit_beta  = jnumpy.dot(coeff_occ_beta, coeff_occ_beta.T)

            gdm1 = jnumpy.zeros((2 * nsite, 2 * nsite))
            gdm1 = gdm1.at[:nsite, :nsite].set(rdm1_fit_alph)
            gdm1 = gdm1.at[nsite:, nsite:].set(rdm1_fit_beta)

            return rdm1_fit_alph + rdm1_fit_beta, gdm1

        return get_rdm1

RLF = RestrictedSpinLossFunction

from utils import print_matrix
from utils import RestrictedElectronicStructureProblem

from utils import solve_restricted_hartree_fock
from utils import solve_unrestricted_hartree_fock
from utils import solve_direct_spin1_full_configuration_interaction

from hub import build_hub_model
hub_u = 8.0
nsite  = 6
is_debug = False

for nelecs in [(2, 2), (3, 3), (4, 4)]:
    if is_debug and (not nelecs == (3, 3)):
        continue

    log = open(f"./log/hub-u-{hub_u:6.4f}-nelec-{nelecs[0]+nelecs[1]}" + ".log", "w")

    hub_obj         = build_hub_model(nsite, nelecs, hub_u)
    hub_obj.verbose = 4
    hub_obj.stdout  = log
    dm0_alph, dm0_beta = (lambda xs: (numpy.diag(xs[0]), numpy.diag(xs[1][::-1])))(numpy.asarray([[1, 0] for _ in range(nsite)]).reshape(2, -1))

    res_rhf = solve_restricted_hartree_fock(hub_obj,   dm0=dm0_alph+dm0_beta)
    res_uhf = solve_unrestricted_hartree_fock(hub_obj, dm0=(dm0_alph, dm0_beta))
    res_fci = solve_direct_spin1_full_configuration_interaction(hub_obj)

    ene_rhf = res_rhf.get_ene()
    ene_uhf = res_uhf.get_ene()
    ene_fci = res_fci.get_ene()

    r_rdm1_rhf = res_rhf.get_r_rdm1()
    r_rdm1_uhf = res_uhf.get_r_rdm1()
    r_rdm1_fci = res_fci.get_r_rdm1()
    rdm1_tag   = r_rdm1_fci

    for res in [res_rhf, res_uhf, res_fci]:
        ene    = res.get_ene()
        r_rdm1 = res.get_r_rdm1()
        u_rdm1 = res.get_u_rdm1()

        dm_err = numpy.abs(r_rdm1_fci - r_rdm1) 
        err_max = numpy.max(dm_err)
        err_avg = numpy.linalg.norm(dm_err) / numpy.size(dm_err)

        print(f"\n\n{res.__class__.__name__}", file=log)
        print(f"Energy: {ene:6.4f}, Error Max: {err_max:6.4e}, Avg: {err_avg:6.4e}", file=log)
        print_matrix(r_rdm1,    t="r_rdm1 = ", stdout=log)
        print_matrix(u_rdm1[0], t="u_rdm1_alph = ", stdout=log)
        print_matrix(u_rdm1[1], t="u_rdm1_beta = ", stdout=log)

    for igen_loss, LF in enumerate([RLF]):
        for (nimp, loss_func_type) in [(2, 1), (2, 2), (2, 3), (nsite, 1)]:
            if is_debug and (not (nimp == 2 and loss_func_type == 2)):
                continue
            
            fit_inds = numpy.asarray([[i+ifrag*nimp for i in range(nimp)] for ifrag in range(nsite // nimp)])
            kwargs   = {"stdout": log, "fit_inds": fit_inds, "nelecs": nelecs, "loss_func_type": loss_func_type}

            lf       = LF(hub_obj.h1, rdm1_tag, **kwargs)
            print("\n\n" + "#"*20, file=log)
            print(f"{lf.__class__.__name__}", file=log)
            print(f"nimp = {nimp}, nsite = {nsite}", file=log)
            print(f"nelecs = {nelecs}", file=log)
            print(f"loss_func_type = {loss_func_type}", file=log)

            x0 = numpy.zeros(lf.num_parm)

            global count, ymin
            count = 0
            ymin  = None

            def callback(x, y, accepted):
                # Fill the correlation potential and calculate f1e
                v1es_fit = lf._get_v1es(x)
                f1es_fit = lf.h1es + v1es_fit
                # Obtain the total RDM
                rdm1_fit, gdm1_fit = lf._get_rdm1(f1es_fit)
                # Calculate the difference between the target and fitted RDMs
                rdm1_err = jnumpy.abs(rdm1_tag - rdm1_fit)

                err_mean = jnumpy.linalg.norm(rdm1_err) / numpy.size(rdm1_err)
                err_max  = jnumpy.max(rdm1_err)

                global count, ymin
                ymin = y if ymin is None else min(ymin, y)
                
                if is_debug:
                    print(f"count = {count:4d}, y = {y:6.4e}, ymin = {ymin:6.4e}, " + f"x = [" + " ".join([f"{xi:6.4f}" for xi in x]) + "]")
                    for (s, f1e) in enumerate(f1es_fit):
                        print_matrix(f1e, t=f"f1e[{s}] = ")

                    print_matrix(rdm1_fit,   t="rdm1_fit = ")
                    print_matrix(rdm1_err,   t="rdm1_err = ")
                    assert count != 10

                print(f"count = {count:4d}, y = {y:6.4e}, ymin = {ymin:6.4e}, " + f"x = [" + " ".join([f"{xi:6.4f}" for xi in x])+"]", file=log)
                count += 1

            kwargs = {
                "method": "bfgs", 
                "jac": lf.grad, 
                "tol": 1e-4, 
                "options": {"disp": False, "maxiter": 1000}
                }



            res = basinhopping(
                lf.func, x0, niter=1000, T=0.1, stepsize=0.6, disp=False,
                callback=callback, minimizer_kwargs=kwargs, 
                niter_success=100, interval=10, 
                )

            x = res.x
            # f1e_fit  = f._f1e + f._fill_correlation_potential(x)
            # rdm1_fit = (lambda rdm1: rdm1[0] + rdm1[1])(f._get_rdm1(f1e_fit))
            # rdm1_err = jnumpy.abs(rdm1_tag - rdm1_fit)
            # err_mean = jnumpy.linalg.norm(rdm1_err) / numpy.size(rdm1_err)
            # err_max  = jnumpy.max(rdm1_err)

            # print(f"\nLoss Function = {res.fun:6.4e}, Error Mean: {err_mean:6.4e}, Max: {err_max:6.4e}, Count: {count}", file=log)
            # print(f"Success = {res.lowest_optimization_result.success}", file=log)
            # print(f"Message = {res.lowest_optimization_result.message}", file=log)
            # print(f"x = " + " ".join([f"{xi:6.4f}" for xi in x]), file=log)
            
            # print(res, file=log)

            # print_matrix(rdm1_fit,   t="rdm1_fit = ", stdout=log)
            # print_matrix(rdm1_tag,   t="rdm1_tag = ", stdout=log)
            # print("\n\n" + "#"*20, file=log)#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Junjies-MacBook-Air.local', release='22.5.0', version='Darwin Kernel Version 22.5.0: Thu Jun  8 22:21:34 PDT 2023; root:xnu-8796.121.3~7/RELEASE_ARM64_T8112', machine='arm64')  Threads 1
Python 3.11.3 | packaged by conda-forge | (main, Apr  6 2023, 08:58:31) [Clang 14.0.6 ]
numpy 1.24.3  scipy 1.10.1
Date: Fri Jul 21 12:15:32 2023
PySCF version 2.2.1
PySCF path  /Users/yangjunjie/packages/pyscf/pyscf-2.2.1/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 0
[INPUT] num. electrons = 8
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom

nuclear repulsion = 0
number of shells = 0
number of NR pGTOs = 0
number of NR cGTOs = 0
basis = sto-3g
ecp = {}
CPU time:        21.74


******** <class 'pyscf.scf.uhf.UHF'> ********
method = UHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-06
SCF conv_tol_grad = None
SCF max_cycles = 200
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/14/127wb84x5yx1jh4dxrvgcfkm0000gn/T/tmp4ati_2s0
max_memory 4000 MB (current use 0 MB)
number electrons alpha = 4  beta = 4
Set gradient conv threshold to 0.001
init E= 0

WARN: alpha nocc = 4  HOMO 8.12310562561766 >= LUMO 8.12310562561766


WARN: beta  nocc = 4  HOMO 8.12310562561766 >= LUMO 8.12310562561766


WARN: system HOMO 8.12310562561766 >= system LUMO 8.12310562561766

cycle= 1 E= 14.3846990967394  delta_E= 14.4  |g|= 1.37  |ddm|= 1.51
  alpha nocc = 4  HOMO = 7.95524995402372  LUMO = 8.09002993160424
  beta  nocc = 4  HOMO = 7.96024106603445  LUMO = 8.09359486643182
cycle= 2 E= 13.9053190769064  delta_E= -0.479  |g|= 0.68  |ddm|=  0.5
  alpha nocc = 4  HOMO = 7.45836566949742  LUMO = 7.92089129156092
  beta  nocc = 4  HOMO = 7.19827613404738  LUMO = 8.07354502310321
cycle= 3 E= 13.6921783562377  delta_E= -0.213  |g|= 0.985  |ddm|= 0.55
  alpha nocc = 4  HOMO = 7.2519259474273  LUMO = 7.98401930114546
  beta  nocc = 4  HOMO = 6.96518290001093  LUMO = 8.04245869858156
cycle= 4 E= 13.4130745270353  delta_E= -0.279  |g|= 0.737  |ddm|= 0.237
  alpha nocc = 4  HOMO = 7.38529814134511  LUMO = 7.87601719593033
  beta  nocc = 4  HOMO = 7.86247504131814  LUMO = 7.97212585414328
cycle= 5 E= 13.9262550988914  delta_E= 0.513  |g|= 0.652  |ddm|= 0.683
  alpha nocc = 4  HOMO = 7.53771077538218  LUMO = 7.82141198130744
  beta  nocc = 4  HOMO = 7.85413710937232  LUMO = 8.04702406321357
cycle= 6 E= 14.3373370432772  delta_E= 0.411  |g|= 1.21  |ddm|= 1.43
  alpha nocc = 4  HOMO = 7.2095864803159  LUMO = 7.9144628378071
  beta  nocc = 4  HOMO = 6.48927587633198  LUMO = 8.34441437843535
cycle= 7 E= 13.0901666105467  delta_E= -1.25  |g|= 0.754  |ddm|= 1.63
  alpha nocc = 4  HOMO = 6.99707269575478  LUMO = 7.93743005363303
  beta  nocc = 4  HOMO = 6.61559581311607  LUMO = 8.41031444895861
cycle= 8 E= 13.0221383557625  delta_E= -0.068  |g|= 0.722  |ddm|= 0.145
  alpha nocc = 4  HOMO = 6.8306605111077  LUMO = 7.95099635407505
  beta  nocc = 4  HOMO = 6.60470762788854  LUMO = 8.39657170983307
cycle= 9 E= 13.0113018991064  delta_E= -0.0108  |g|= 0.676  |ddm|= 0.0154
  alpha nocc = 4  HOMO = 5.20680144321276  LUMO = 8.20729524524476
  beta  nocc = 4  HOMO = 7.29583948477264  LUMO = 9.25361287621275
cycle= 10 E= 12.9894429842949  delta_E= -0.0219  |g|= 0.874  |ddm|= 1.02
  alpha nocc = 4  HOMO = 5.12400310638315  LUMO = 8.25079635201904
  beta  nocc = 4  HOMO = 7.276955222102  LUMO = 9.19868762762526
cycle= 11 E= 12.9782910384567  delta_E= -0.0112  |g|= 0.865  |ddm|= 0.0389
  alpha nocc = 4  HOMO = 5.30266164606211  LUMO = 7.7048671910011
  beta  nocc = 4  HOMO = 7.09165618522493  LUMO = 8.86287805446464
cycle= 12 E= 12.9107216091727  delta_E= -0.0676  |g|= 0.721  |ddm|= 0.194
  alpha nocc = 4  HOMO = 5.33942534176213  LUMO = 7.63296726170474
  beta  nocc = 4  HOMO = 6.88719789585317  LUMO = 8.55079628325148
cycle= 13 E= 12.887167743385  delta_E= -0.0236  |g|= 0.603  |ddm|= 0.32
  alpha nocc = 4  HOMO = 6.59164587594612  LUMO = 7.95067788379979
  beta  nocc = 4  HOMO = 6.48330248930259  LUMO = 8.293435590692
cycle= 14 E= 13.0928752607492  delta_E= 0.206  |g|= 0.774  |ddm|= 0.627
  alpha nocc = 4  HOMO = 5.22733583006124  LUMO = 8.27182085501289
  beta  nocc = 4  HOMO = 7.24081346390702  LUMO = 9.10051021656106
cycle= 15 E= 12.9273506879156  delta_E= -0.166  |g|= 0.665  |ddm|= 1.08
  alpha nocc = 4  HOMO = 5.13792429736175  LUMO = 8.25765892777199
  beta  nocc = 4  HOMO = 6.99358799769283  LUMO = 8.65251562768415
cycle= 16 E= 12.8225900759647  delta_E= -0.105  |g|= 0.193  |ddm|= 0.416
  alpha nocc = 4  HOMO = 5.48906331603456  LUMO = 8.24736382346634
  beta  nocc = 4  HOMO = 7.09110622296637  LUMO = 8.88093232877149
cycle= 17 E= 12.8618178054439  delta_E= 0.0392  |g|= 0.317  |ddm|= 0.348
  alpha nocc = 4  HOMO = 5.09915826271207  LUMO = 8.26666890124117
  beta  nocc = 4  HOMO = 6.96335585878053  LUMO = 8.65430291537852
cycle= 18 E= 12.8205722116713  delta_E= -0.0412  |g|= 0.113  |ddm|= 0.258
  alpha nocc = 4  HOMO = 5.12613434879459  LUMO = 8.2645430870809
  beta  nocc = 4  HOMO = 6.96527774006769  LUMO = 8.65847518961226
cycle= 19 E= 12.8212810651095  delta_E= 0.000709  |g|= 0.105  |ddm|= 0.0222
  alpha nocc = 4  HOMO = 5.13759037254205  LUMO = 8.26340795271718
  beta  nocc = 4  HOMO = 6.98052776538872  LUMO = 8.67627576925805
cycle= 20 E= 12.8224139212217  delta_E= 0.00113  |g|= 0.116  |ddm|= 0.0209
  alpha nocc = 4  HOMO = 5.10754227393178  LUMO = 8.2628748336299
  beta  nocc = 4  HOMO = 6.98282666701046  LUMO = 8.66970929173537
cycle= 21 E= 12.8200395016995  delta_E= -0.00237  |g|= 0.09  |ddm|= 0.0486
  alpha nocc = 4  HOMO = 5.06172290061814  LUMO = 8.26218439633786
  beta  nocc = 4  HOMO = 6.90030615962019  LUMO = 8.56847878647429
cycle= 22 E= 12.8161811861312  delta_E= -0.00386  |g|= 0.00591  |ddm|= 0.106
  alpha nocc = 4  HOMO = 5.06115063460649  LUMO = 8.26229005718388
  beta  nocc = 4  HOMO = 6.90193709665404  LUMO = 8.57102415152797
cycle= 23 E= 12.8161601891285  delta_E= -2.1e-05  |g|= 0.00235  |ddm|= 0.00654
  alpha nocc = 4  HOMO = 5.0612552500143  LUMO = 8.26204691152728
  beta  nocc = 4  HOMO = 6.89931308744705  LUMO = 8.56790887781921
cycle= 24 E= 12.8161583334713  delta_E= -1.86e-06  |g|= 0.000299  |ddm|= 0.00204
  alpha nocc = 4  HOMO = 5.06127100507125  LUMO = 8.26201816859513
  beta  nocc = 4  HOMO = 6.89934788320001  LUMO = 8.56796258496006
cycle= 25 E= 12.8161583093563  delta_E= -2.41e-08  |g|= 8.61e-05  |ddm|= 0.00039
  alpha nocc = 4  HOMO = 5.0612682788147  LUMO = 8.26202308817848
  beta  nocc = 4  HOMO = 6.89926760857556  LUMO = 8.56786759876122
Extra cycle  E= 12.8161583081496  delta_E= -1.21e-09  |g|= 6.96e-05  |ddm|= 4.1e-05
converged SCF energy = 12.8161583081496  <S^2> = 1.7090509  2S+1 = 2.799322


RestrictedHartreeFock
Energy: 19.6802, Error Max: 6.6380e-01, Avg: 5.4790e-02

r_rdm1 = 
        #0        #1        #2        #3        #4       
0       1.99713   0.03783  -0.03783   0.00287  -0.03783
1       0.03783   1.00144   0.99856  -0.03783  -0.00144
2      -0.03783   0.99856   1.00144   0.03783   0.00144
3       0.00287  -0.03783   0.03783   1.99713   0.03783
4      -0.03783  -0.00144   0.00144   0.03783   1.00144
5       0.03783   0.00144  -0.00144  -0.03783   0.99856
        #5       
0       0.03783
1       0.00144
2      -0.00144
3      -0.03783
4       0.99856
5       1.00144

u_rdm1_alph = 
        #0        #1        #2        #3        #4       
0       0.99856   0.01892  -0.01892   0.00144  -0.01892
1       0.01892   0.50072   0.49928  -0.01892  -0.00072
2      -0.01892   0.49928   0.50072   0.01892   0.00072
3       0.00144  -0.01892   0.01892   0.99856   0.01892
4      -0.01892  -0.00072   0.00072   0.01892   0.50072
5       0.01892   0.00072  -0.00072  -0.01892   0.49928
        #5       
0       0.01892
1       0.00072
2      -0.00072
3      -0.01892
4       0.49928
5       0.50072

u_rdm1_beta = 
        #0        #1        #2        #3        #4       
0       0.99856   0.01892  -0.01892   0.00144  -0.01892
1       0.01892   0.50072   0.49928  -0.01892  -0.00072
2      -0.01892   0.49928   0.50072   0.01892   0.00072
3       0.00144  -0.01892   0.01892   0.99856   0.01892
4      -0.01892  -0.00072   0.00072   0.01892   0.50072
5       0.01892   0.00072  -0.00072  -0.01892   0.49928
        #5       
0       0.01892
1       0.00072
2      -0.00072
3      -0.01892
4       0.49928
5       0.50072


UnrestrictedHartreeFock
Energy: 12.8162, Error Max: 2.4063e-01, Avg: 1.6822e-02

r_rdm1 = 
        #0        #1        #2        #3        #4       
0       1.09272   0.27573  -0.09668  -0.02386  -0.09668
1       0.27573   1.45366   0.51193  -0.09668   0.01193
2      -0.09668   0.51193   1.45362   0.27570  -0.04635
3      -0.02386  -0.09668   0.27570   1.09271   0.27572
4      -0.09668   0.01193  -0.04635   0.27572   1.45365
5       0.27572  -0.04636   0.01193  -0.09668   0.51193
        #5       
0       0.27572
1      -0.04636
2       0.01193
3      -0.09668
4       0.51193
5       1.45364

u_rdm1_alph = 
        #0        #1        #2        #3        #4       
0       0.10804   0.21481  -0.03575  -0.03918  -0.03575
1       0.21481   0.94597   0.01959  -0.03575   0.01959
2      -0.03575   0.01959   0.94599   0.21477  -0.05401
3      -0.03918  -0.03575   0.21477   0.10802   0.21479
4      -0.03575   0.01959  -0.05401   0.21479   0.94598
5       0.21479  -0.05402   0.01959  -0.03575   0.01959
        #5       
0       0.21479
1      -0.05402
2       0.01959
3      -0.03575
4       0.01959
5       0.94598

u_rdm1_beta = 
        #0        #1        #2        #3        #4       
0       0.98468   0.06092  -0.06093   0.01532  -0.06093
1       0.06092   0.50769   0.49234  -0.06093  -0.00766
2      -0.06093   0.49234   0.50763   0.06093   0.00766
3       0.01532  -0.06093   0.06093   0.98468   0.06093
4      -0.06093  -0.00766   0.00766   0.06093   0.50766
5       0.06093   0.00766  -0.00766  -0.06093   0.49234
        #5       
0       0.06093
1       0.00766
2      -0.00766
3      -0.06093
4       0.49234
5       0.50765


DirectSpin1FullConfigurationInteraction
Energy: 11.7920, Error Max: 0.0000e+00, Avg: 0.0000e+00

r_rdm1 = 
        #0        #1        #2        #3        #4       
0       1.33333   0.40225  -0.10619  -0.00432  -0.10619
1       0.40225   1.33333   0.40225  -0.10619  -0.00432
2      -0.10619   0.40225   1.33333   0.40225  -0.10619
3      -0.00432  -0.10619   0.40225   1.33333   0.40225
4      -0.10619  -0.00432  -0.10619   0.40225   1.33333
5       0.40225  -0.10619  -0.00432  -0.10619   0.40225
        #5       
0       0.40225
1      -0.10619
2      -0.00432
3      -0.10619
4       0.40225
5       1.33333

u_rdm1_alph = 
        #0        #1        #2        #3        #4       
0       0.66667   0.20113  -0.05309  -0.00216  -0.05309
1       0.20113   0.66667   0.20113  -0.05309  -0.00216
2      -0.05309   0.20113   0.66667   0.20113  -0.05309
3      -0.00216  -0.05309   0.20113   0.66667   0.20113
4      -0.05309  -0.00216  -0.05309   0.20113   0.66667
5       0.20113  -0.05309  -0.00216  -0.05309   0.20113
        #5       
0       0.20113
1      -0.05309
2      -0.00216
3      -0.05309
4       0.20113
5       0.66667

u_rdm1_beta = 
        #0        #1        #2        #3        #4       
0       0.66667   0.20113  -0.05309  -0.00216  -0.05309
1       0.20113   0.66667   0.20113  -0.05309  -0.00216
2      -0.05309   0.20113   0.66667   0.20113  -0.05309
3      -0.00216  -0.05309   0.20113   0.66667   0.20113
4      -0.05309  -0.00216  -0.05309   0.20113   0.66667
5       0.20113  -0.05309  -0.00216  -0.05309   0.20113
        #5       
0       0.20113
1      -0.05309
2      -0.00216
3      -0.05309
4       0.20113
5       0.66667


#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#RestrictedSpinLossFunction####################
Loss Function Info:
##################################################################
stdout = <_io.TextIOWrapper name='./log/hub-u-8.0000-nelec-8.log' mode='w' encoding='UTF-8'>
h1e = [[ 0. -1.  0.  0.  0. -1.]
 [-1.  0. -1.  0.  0.  0.]
 [ 0. -1.  0. -1.  0.  0.]
 [ 0.  0. -1.  0. -1.  0.]
 [ 0.  0.  0. -1.  0. -1.]
 [-1.  0.  0.  0. -1.  0.]]
rdm1_tag = [[ 1.33333333  0.40225417 -0.10618866 -0.00432239 -0.10618866  0.40225417]
 [ 0.40225417  1.33333333  0.40225417 -0.10618866 -0.00432239 -0.10618866]
 [-0.10618866  0.40225417  1.33333333  0.40225417 -0.10618866 -0.00432239]
 [-0.00432239 -0.10618866  0.40225417  1.33333333  0.40225417 -0.10618866]
 [-0.10618866 -0.00432239 -0.10618866  0.40225417  1.33333333  0.40225417]
 [ 0.40225417 -0.10618866 -0.00432239 -0.10618866  0.40225417  1.33333333]]
fit_inds = [[0 1]
 [2 3]
 [4 5]]
nelecs = (4, 4)
loss_func_type = 1
ind_triu = (Array([0, 0, 1], dtype=int32), Array([0, 1, 1], dtype=int32))
num_triu = 3
num_parm = 3
nfrag = 3
nimp = 2
nsite = 6
h1es = [[[ 0. -1.  0.  0.  0. -1.]
  [-1.  0. -1.  0.  0.  0.]
  [ 0. -1.  0. -1.  0.  0.]
  [ 0.  0. -1.  0. -1.  0.]
  [ 0.  0.  0. -1.  0. -1.]
  [-1.  0.  0.  0. -1.  0.]]]
func = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x10f7fe0c0>
grad = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x10f7fc900>
hess = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x10f7fef20>
_get_v1es = <function LossFunctionMixin._gen_get_v1es.<locals>.get_v1es at 0x10f7fd440>
_get_rdm1 = <function RestrictedSpinLossFunction._gen_get_rdm1.<locals>.get_rdm1 at 0x10f7fd940>


####################
RestrictedSpinLossFunction
nimp = 2, nsite = 6
nelecs = (4, 4)
loss_func_type = 1
count =    0, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.0000 0.0000 0.0000]
count =    1, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.2946 -0.0817 0.1024]
count =    2, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.6930 -0.1391 0.4797]
count =    3, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.3131 -0.2357 0.4990]
count =    4, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.3100 0.3066 0.3035]
count =    5, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.1525 0.6025 -0.2097]
count =    6, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.4100 0.5253 -0.2504]
count =    7, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.3615 0.4368 -0.2889]
count =    8, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.7428 0.4023 -0.7009]
count =    9, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.9622 0.6129 -0.5797]
count =   10, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.3205 -0.0431 -0.4754]
count =   11, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.5747 0.4087 -0.3289]
count =   12, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.8166 0.0058 -0.0545]
count =   13, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.3924 -0.0926 0.4845]
count =   14, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.1223 -0.2866 -0.1081]
count =   15, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.5027 -0.7854 -0.2751]
count =   16, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.3800 -0.5758 -0.5570]
count =   17, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.3228 -0.4859 -0.6806]
count =   18, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.8260 -1.1318 -0.8185]
count =   19, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.3107 -1.0183 -1.0640]
count =   20, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.0663 -1.6034 -0.8142]
count =   21, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.5392 -1.8517 -0.6001]
count =   22, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.3938 -1.6908 -1.2585]
count =   23, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.0777 -1.9375 -1.0244]
count =   24, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.1283 -1.9248 -1.5024]
count =   25, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.5785 -1.5746 -1.5842]
count =   26, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.4595 -2.2783 -1.4533]
count =   27, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.1536 -2.8217 -0.8283]
count =   28, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.0789 -3.0234 -0.1990]
count =   29, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.3532 -3.2957 0.0991]
count =   30, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.0141 -4.0949 -0.6788]
count =   31, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.3572 -3.6460 -1.3307]
count =   32, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.4367 -3.2948 -1.6759]
count =   33, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.9493 -2.5501 -1.9525]
count =   34, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.4009 -2.8941 -2.1330]
count =   35, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.2753 -3.4238 -1.4304]
count =   36, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.3785 -4.1630 -0.7545]
count =   37, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.0989 -3.7522 -0.4732]
count =   38, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.4661 -4.1952 -0.8892]
count =   39, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.2293 -4.3290 -1.5015]
count =   40, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.6157 -3.7311 -1.1087]
count =   41, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.8160 -3.5378 -1.7541]
count =   42, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.3648 -3.7155 -1.4924]
count =   43, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.2756 -2.8528 -0.7779]
count =   44, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.4330 -2.5692 -1.2995]
count =   45, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.1989 -3.0145 -0.4319]
count =   46, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.7103 -3.3746 -1.3293]
count =   47, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.2941 -4.2751 -2.1843]
count =   48, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.2804 -3.7599 -1.5005]
count =   49, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.8023 -3.5413 -2.0721]
count =   50, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.0696 -4.0836 -1.8378]
count =   51, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.5135 -5.0229 -0.9673]
count =   52, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.2364 -4.9540 0.0027]
count =   53, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.7998 -5.6549 0.0752]
count =   54, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.7754 -5.7954 -0.0924]
count =   55, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.0493 -6.8088 0.7833]
count =   56, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.5450 -6.0442 1.2261]
count =   57, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.5187 -6.3990 0.4721]
count =   58, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.1285 -5.7463 0.4083]
count =   59, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.1042 -5.1275 0.8306]
count =   60, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.7861 -4.5239 1.2357]
count =   61, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.2944 -4.4895 0.4554]
count =   62, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.1162 -4.9980 0.7602]
count =   63, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.0195 -6.1161 1.3348]
count =   64, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.1049 -5.4172 1.8994]
count =   65, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.0562 -5.7883 0.9176]
count =   66, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.5773 -6.1815 0.0988]
count =   67, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.0444 -5.5158 0.3167]
count =   68, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.1267 -6.1374 -0.0003]
count =   69, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.9695 -6.9426 -0.7140]
count =   70, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.9993 -5.6980 0.4533]
count =   71, y = 1.4692e+00, ymin = 1.4692e+00, x = [4.6864 -6.8364 -0.6327]
count =   72, y = 1.4692e+00, ymin = 1.4692e+00, x = [4.0061 -5.6381 -0.6630]
count =   73, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.9426 -4.9409 0.3689]
count =   74, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.3138 -4.3772 0.5970]
count =   75, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.3975 -4.7625 0.2801]
count =   76, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.3766 -5.4836 0.1891]
count =   77, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.8681 -6.7359 -0.6256]
count =   78, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.2333 -6.0718 -0.8330]
count =   79, y = 1.4692e+00, ymin = 1.4692e+00, x = [-1.4015 -4.9536 -1.8939]
count =   80, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.1533 -4.7185 -2.0109]
count =   81, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.1588 -5.1817 -1.2950]
count =   82, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.2114 -4.7150 -1.3965]
count =   83, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.0160 -4.3759 -0.3734]
count =   84, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.6526 -5.0020 -0.8007]
count =   85, y = 1.4692e+00, ymin = 1.4692e+00, x = [-1.9968 -4.0054 -0.2780]
count =   86, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.8207 -5.0722 -0.9906]
count =   87, y = 1.4692e+00, ymin = 1.4692e+00, x = [-2.0669 -3.8411 -1.2059]
count =   88, y = 1.4692e+00, ymin = 1.4692e+00, x = [-2.6829 -3.2790 -1.0463]
count =   89, y = 1.4692e+00, ymin = 1.4692e+00, x = [-2.4048 -3.7023 -1.0730]
count =   90, y = 1.4692e+00, ymin = 1.4692e+00, x = [-3.4534 -3.3813 -1.0509]
count =   91, y = 1.4692e+00, ymin = 1.4692e+00, x = [-4.8565 -3.6317 -0.8035]
count =   92, y = 1.4692e+00, ymin = 1.4692e+00, x = [-5.2730 -4.8006 0.3200]
count =   93, y = 1.4692e+00, ymin = 1.4692e+00, x = [-4.7680 -5.9531 0.0726]
count =   94, y = 1.4692e+00, ymin = 1.4692e+00, x = [-5.5573 -5.0856 1.2007]
count =   95, y = 1.4692e+00, ymin = 1.4692e+00, x = [-6.4781 -4.1541 0.6465]
count =   96, y = 1.4692e+00, ymin = 1.4692e+00, x = [-6.7037 -3.8845 0.7307]
count =   97, y = 1.4692e+00, ymin = 1.4692e+00, x = [-6.8238 -5.2609 0.3482]
count =   98, y = 1.4692e+00, ymin = 1.4692e+00, x = [-8.3353 -4.7163 -1.0248]
count =   99, y = 1.4692e+00, ymin = 1.4692e+00, x = [-7.4230 -4.2578 -0.6122]
count =  100, y = 1.4692e+00, ymin = 1.4692e+00, x = [-7.6988 -4.1083 0.5291]
count =  101, y = 1.4692e+00, ymin = 1.4692e+00, x = [-8.5545 -2.5094 0.2636]


#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#RestrictedSpinLossFunction####################
Loss Function Info:
##################################################################
stdout = <_io.TextIOWrapper name='./log/hub-u-8.0000-nelec-8.log' mode='w' encoding='UTF-8'>
h1e = [[ 0. -1.  0.  0.  0. -1.]
 [-1.  0. -1.  0.  0.  0.]
 [ 0. -1.  0. -1.  0.  0.]
 [ 0.  0. -1.  0. -1.  0.]
 [ 0.  0.  0. -1.  0. -1.]
 [-1.  0.  0.  0. -1.  0.]]
rdm1_tag = [[ 1.33333333  0.40225417 -0.10618866 -0.00432239 -0.10618866  0.40225417]
 [ 0.40225417  1.33333333  0.40225417 -0.10618866 -0.00432239 -0.10618866]
 [-0.10618866  0.40225417  1.33333333  0.40225417 -0.10618866 -0.00432239]
 [-0.00432239 -0.10618866  0.40225417  1.33333333  0.40225417 -0.10618866]
 [-0.10618866 -0.00432239 -0.10618866  0.40225417  1.33333333  0.40225417]
 [ 0.40225417 -0.10618866 -0.00432239 -0.10618866  0.40225417  1.33333333]]
fit_inds = [[0 1]
 [2 3]
 [4 5]]
nelecs = (4, 4)
loss_func_type = 2
ind_triu = (Array([0, 0, 1], dtype=int32), Array([0, 1, 1], dtype=int32))
num_triu = 3
num_parm = 3
nfrag = 3
nimp = 2
nsite = 6
h1es = [[[ 0. -1.  0.  0.  0. -1.]
  [-1.  0. -1.  0.  0.  0.]
  [ 0. -1.  0. -1.  0.  0.]
  [ 0.  0. -1.  0. -1.  0.]
  [ 0.  0.  0. -1.  0. -1.]
  [-1.  0.  0.  0. -1.  0.]]]
func = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x11ac96840>
grad = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x11ac94900>
hess = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x11ac95080>
_get_v1es = <function LossFunctionMixin._gen_get_v1es.<locals>.get_v1es at 0x10f7df7e0>
_get_rdm1 = <function RestrictedSpinLossFunction._gen_get_rdm1.<locals>.get_rdm1 at 0x11ac96520>


####################
RestrictedSpinLossFunction
nimp = 2, nsite = 6
nelecs = (4, 4)
loss_func_type = 2
count =    0, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.0000 0.0000 0.0000]
count =    1, y = 1.4240e+00, ymin = 1.4240e+00, x = [-0.5069 -0.2101 0.0618]
count =    2, y = 1.4240e+00, ymin = 1.4240e+00, x = [-0.5839 0.1380 -0.5242]
count =    3, y = 1.4240e+00, ymin = 1.4240e+00, x = [-0.8712 -0.0735 -0.8003]
count =    4, y = 1.4240e+00, ymin = 1.4240e+00, x = [-0.3911 -0.1145 -0.7670]
count =    5, y = 1.4240e+00, ymin = 1.4240e+00, x = [-0.0275 -0.5035 -0.6492]
count =    6, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.2144 -0.4263 -0.1376]
count =    7, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.2673 -0.1562 0.1140]
count =    8, y = 1.4240e+00, ymin = 1.4240e+00, x = [-0.0038 -0.0690 -0.3666]
count =    9, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.4874 -0.2331 -0.5205]
count =   10, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.0099 0.0103 -0.7794]
count =   11, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.2156 -0.0337 -0.9736]
count =   12, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.1344 0.5760 -1.4988]
count =   13, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.6065 0.2005 -1.2105]
count =   14, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.8576 0.1904 -0.7934]
count =   15, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.8044 0.0790 -0.8620]
count =   16, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.5578 -0.3393 -0.3573]
count =   17, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.8214 -0.3582 -0.5142]
count =   18, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.4512 -0.0594 -0.7935]
count =   19, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.2043 0.3489 -0.4282]
count =   20, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.4100 -0.2097 0.2763]
count =   21, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.7370 0.0070 0.7930]
count =   22, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.9344 0.4525 1.1540]
count =   23, y = 1.4240e+00, ymin = 1.4240e+00, x = [2.4364 0.2813 1.6019]
count =   24, y = 1.4240e+00, ymin = 1.4240e+00, x = [2.8781 -0.0839 1.2249]
count =   25, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.5559 0.4836 0.6841]
count =   26, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.8896 0.8637 0.0723]
count =   27, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.1753 1.1527 -0.2212]
count =   28, y = 1.4240e+00, ymin = 1.4240e+00, x = [2.6710 0.4763 0.4561]
count =   29, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.0609 0.6517 0.1229]
count =   30, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.7046 0.8153 -0.0760]
count =   31, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.2074 1.6062 -0.0571]
count =   32, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.7936 1.8347 -0.4030]
count =   33, y = 1.4240e+00, ymin = 1.4240e+00, x = [4.4260 1.2191 -0.6614]
count =   34, y = 1.4240e+00, ymin = 1.4240e+00, x = [4.1890 1.0495 -1.0823]
count =   35, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.7306 1.2905 -0.9747]
count =   36, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.2484 1.7952 -0.3336]
count =   37, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.1572 1.7528 -0.3254]
count =   38, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.5263 2.5508 0.0337]
count =   39, y = 1.4240e+00, ymin = 1.4240e+00, x = [4.3483 1.7930 0.3059]
count =   40, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.9731 2.6613 0.0020]
count =   41, y = 1.4240e+00, ymin = 1.4240e+00, x = [4.0631 2.3880 -0.7778]
count =   42, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.2716 1.8546 -1.3880]
count =   43, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.1864 2.3651 -0.7212]
count =   44, y = 1.4240e+00, ymin = 1.4240e+00, x = [2.4727 2.2764 -1.3479]
count =   45, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.7489 2.3679 -0.7602]
count =   46, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.1558 1.9507 -0.8526]
count =   47, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.3003 2.0700 -0.6842]
count =   48, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.5409 2.1055 -1.3401]
count =   49, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.0926 2.3453 -2.0100]
count =   50, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.6043 1.7974 -1.8928]
count =   51, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.4483 1.1269 -1.4584]
count =   52, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.2193 0.9100 -0.5497]
count =   53, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.3716 1.7508 -0.8250]
count =   54, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.1681 2.0663 -1.5043]
count =   55, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.5304 2.5288 -1.9545]
count =   56, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.0400 3.3619 -2.3682]
count =   57, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.0476 4.2725 -2.4422]
count =   58, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.3419 5.1505 -1.7336]
count =   59, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.1506 4.5087 -1.6926]
count =   60, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.5095 4.0147 -1.8183]
count =   61, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.1910 3.1575 -0.6926]
count =   62, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.0574 2.1756 -1.6666]
count =   63, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.3586 2.2912 -1.7614]
count =   64, y = 1.4240e+00, ymin = 1.4240e+00, x = [-0.3360 3.1471 -1.6701]
count =   65, y = 1.4240e+00, ymin = 1.4240e+00, x = [-0.2365 3.6716 -0.5510]
count =   66, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.5801 4.4669 -0.1768]
count =   67, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.3054 4.9662 0.9502]
count =   68, y = 1.4240e+00, ymin = 1.4240e+00, x = [2.1403 6.0357 0.4447]
count =   69, y = 1.4240e+00, ymin = 1.4240e+00, x = [2.2971 5.9723 1.3162]
count =   70, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.3955 6.6056 2.1714]
count =   71, y = 1.4240e+00, ymin = 1.4240e+00, x = [4.2384 7.3351 1.5111]
count =   72, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.4656 8.0871 0.8980]
count =   73, y = 1.4240e+00, ymin = 1.4240e+00, x = [4.3255 8.8258 0.8358]
count =   74, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.6867 9.3199 0.8903]
count =   75, y = 1.4240e+00, ymin = 1.4240e+00, x = [2.4856 9.5438 -0.0851]
count =   76, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.4220 9.7667 0.9740]
count =   77, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.1085 10.7578 1.3192]
count =   78, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.2459 10.8972 1.0447]
count =   79, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.8188 11.0379 1.4904]
count =   80, y = 1.4240e+00, ymin = 1.4240e+00, x = [2.8138 12.1534 1.8478]
count =   81, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.8825 11.4569 0.6118]
count =   82, y = 1.4240e+00, ymin = 1.4240e+00, x = [0.9432 10.1337 1.5553]
count =   83, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.6367 9.1344 0.4489]
count =   84, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.4002 9.8215 1.2064]
count =   85, y = 1.4240e+00, ymin = 1.4240e+00, x = [2.4235 9.7419 1.8531]
count =   86, y = 1.4240e+00, ymin = 1.4240e+00, x = [1.9033 10.7891 2.5285]
count =   87, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.1719 10.1773 1.7684]
count =   88, y = 1.4240e+00, ymin = 1.4240e+00, x = [4.2299 10.3426 1.5140]
count =   89, y = 1.4240e+00, ymin = 1.4240e+00, x = [3.8646 9.8770 0.4155]
count =   90, y = 1.4240e+00, ymin = 1.4240e+00, x = [4.3942 8.6324 0.0623]
count =   91, y = 1.4240e+00, ymin = 1.4240e+00, x = [4.8156 8.8735 -0.9611]
count =   92, y = 1.4240e+00, ymin = 1.4240e+00, x = [6.2947 10.2252 -1.3339]
count =   93, y = 1.4240e+00, ymin = 1.4240e+00, x = [7.4277 9.3856 -0.0240]
count =   94, y = 1.4240e+00, ymin = 1.4240e+00, x = [6.9642 9.3894 -0.9050]
count =   95, y = 1.4240e+00, ymin = 1.4240e+00, x = [7.2936 9.4123 -0.0842]
count =   96, y = 1.4240e+00, ymin = 1.4240e+00, x = [7.9696 9.9954 1.1961]
count =   97, y = 1.4240e+00, ymin = 1.4240e+00, x = [6.8043 8.9790 1.9258]
count =   98, y = 1.4240e+00, ymin = 1.4240e+00, x = [7.3848 8.6972 1.7840]
count =   99, y = 1.4240e+00, ymin = 1.4240e+00, x = [7.5541 8.5910 0.7214]
count =  100, y = 1.4240e+00, ymin = 1.4240e+00, x = [7.6075 8.0211 1.8526]
count =  101, y = 1.4240e+00, ymin = 1.4240e+00, x = [8.9565 9.3802 2.6791]


#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#RestrictedSpinLossFunction####################
Loss Function Info:
##################################################################
stdout = <_io.TextIOWrapper name='./log/hub-u-8.0000-nelec-8.log' mode='w' encoding='UTF-8'>
h1e = [[ 0. -1.  0.  0.  0. -1.]
 [-1.  0. -1.  0.  0.  0.]
 [ 0. -1.  0. -1.  0.  0.]
 [ 0.  0. -1.  0. -1.  0.]
 [ 0.  0.  0. -1.  0. -1.]
 [-1.  0.  0.  0. -1.  0.]]
rdm1_tag = [[ 1.33333333  0.40225417 -0.10618866 -0.00432239 -0.10618866  0.40225417]
 [ 0.40225417  1.33333333  0.40225417 -0.10618866 -0.00432239 -0.10618866]
 [-0.10618866  0.40225417  1.33333333  0.40225417 -0.10618866 -0.00432239]
 [-0.00432239 -0.10618866  0.40225417  1.33333333  0.40225417 -0.10618866]
 [-0.10618866 -0.00432239 -0.10618866  0.40225417  1.33333333  0.40225417]
 [ 0.40225417 -0.10618866 -0.00432239 -0.10618866  0.40225417  1.33333333]]
fit_inds = [[0 1]
 [2 3]
 [4 5]]
nelecs = (4, 4)
loss_func_type = 3
ind_triu = (Array([0, 0, 1], dtype=int32), Array([0, 1, 1], dtype=int32))
num_triu = 3
num_parm = 3
nfrag = 3
nimp = 2
nsite = 6
h1es = [[[ 0. -1.  0.  0.  0. -1.]
  [-1.  0. -1.  0.  0.  0.]
  [ 0. -1.  0. -1.  0.  0.]
  [ 0.  0. -1.  0. -1.  0.]
  [ 0.  0.  0. -1.  0. -1.]
  [-1.  0.  0.  0. -1.  0.]]]
func = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x11ac94040>
grad = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x10f686200>
hess = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x10f6844a0>
_get_v1es = <function LossFunctionMixin._gen_get_v1es.<locals>.get_v1es at 0x11ac97100>
_get_rdm1 = <function RestrictedSpinLossFunction._gen_get_rdm1.<locals>.get_rdm1 at 0x11ac96fc0>


####################
RestrictedSpinLossFunction
nimp = 2, nsite = 6
nelecs = (4, 4)
loss_func_type = 3
count =    0, y = 2.8933e+00, ymin = 2.8933e+00, x = [0.0000 0.0000 0.0000]
count =    1, y = 2.8933e+00, ymin = 2.8933e+00, x = [0.3819 -0.0823 -0.4977]
count =    2, y = 2.8933e+00, ymin = 2.8933e+00, x = [0.5959 0.4060 -0.7431]
count =    3, y = 2.8933e+00, ymin = 2.8933e+00, x = [0.5582 0.4539 -0.8540]
count =    4, y = 2.8933e+00, ymin = 2.8933e+00, x = [0.7684 0.8202 -0.7832]
count =    5, y = 2.8933e+00, ymin = 2.8933e+00, x = [0.5591 0.9490 -0.4692]
count =    6, y = 2.8933e+00, ymin = 2.8933e+00, x = [1.0422 1.1131 -1.0348]
count =    7, y = 2.8933e+00, ymin = 2.8933e+00, x = [1.1500 1.7121 -1.4002]
count =    8, y = 2.8933e+00, ymin = 2.8933e+00, x = [1.1692 2.2250 -1.2412]
count =    9, y = 2.8933e+00, ymin = 2.8933e+00, x = [1.7584 2.7089 -1.3801]
count =   10, y = 2.8933e+00, ymin = 2.8933e+00, x = [1.9042 3.1418 -0.9654]
count =   11, y = 2.8933e+00, ymin = 2.8933e+00, x = [2.5644 2.5024 -0.5587]
count =   12, y = 2.8933e+00, ymin = 2.8933e+00, x = [2.7862 2.1022 -0.1832]
count =   13, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.0626 2.4039 0.2517]
count =   14, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.1255 2.9701 -0.0900]
count =   15, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.0006 3.2329 0.4965]
count =   16, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.6316 3.1788 0.8282]
count =   17, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.8788 2.8054 1.3743]
count =   18, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.3290 2.4521 1.3316]
count =   19, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.2589 2.4141 1.8310]
count =   20, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.6928 2.9961 2.1233]
count =   21, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.1944 3.6040 1.4405]
count =   22, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.7898 4.0957 1.4417]
count =   23, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.0872 4.1277 1.8498]
count =   24, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.8867 4.7400 1.8101]
count =   25, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.1736 4.8309 2.1010]
count =   26, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.8502 4.8523 2.7390]
count =   27, y = 2.8933e+00, ymin = 2.8933e+00, x = [5.1847 5.3662 2.7337]
count =   28, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.7154 5.2609 3.0623]
count =   29, y = 2.8933e+00, ymin = 2.8933e+00, x = [5.4389 5.8265 3.7229]
count =   30, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.9381 5.4712 3.2510]
count =   31, y = 2.8933e+00, ymin = 2.8933e+00, x = [5.1250 5.1697 3.1736]
count =   32, y = 2.8933e+00, ymin = 2.8933e+00, x = [5.5302 4.7001 3.3916]
count =   33, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.8314 4.0789 3.0824]
count =   34, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.5253 3.6846 2.6903]
count =   35, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.0286 4.1973 2.3189]
count =   36, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.5238 4.0037 2.1067]
count =   37, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.0817 3.2089 1.9230]
count =   38, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.0888 2.5897 1.1640]
count =   39, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.5658 1.8540 1.5926]
count =   40, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.9905 2.0582 2.0962]
count =   41, y = 2.8933e+00, ymin = 2.8933e+00, x = [3.6289 2.6515 2.7685]
count =   42, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.5026 2.8667 1.9181]
count =   43, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.4014 1.9530 1.2493]
count =   44, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.0552 1.0811 0.8899]
count =   45, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.0450 1.8526 1.4310]
count =   46, y = 2.8933e+00, ymin = 2.8933e+00, x = [4.4019 1.3215 1.0010]
count =   47, y = 2.8933e+00, ymin = 2.8933e+00, x = [5.1656 1.9397 1.1879]
count =   48, y = 2.8933e+00, ymin = 2.8933e+00, x = [5.9341 1.4265 1.9550]
count =   49, y = 2.8933e+00, ymin = 2.8933e+00, x = [5.9369 0.8585 1.2688]
count =   50, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.5376 1.1633 1.0346]
count =   51, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.7447 1.8371 1.4645]
count =   52, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.9326 2.5949 0.5455]
count =   53, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.4574 3.0121 0.9345]
count =   54, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.8371 3.3720 1.5875]
count =   55, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.8572 2.9628 0.9001]
count =   56, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.2092 2.6099 1.3868]
count =   57, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.9509 2.9431 1.3537]
count =   58, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.3518 3.3559 0.3531]
count =   59, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.2911 3.8295 0.2215]
count =   60, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.9608 3.2121 0.8044]
count =   61, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.5313 2.3565 1.2777]
count =   62, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.0163 2.4643 1.0784]
count =   63, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.8636 1.8694 0.3933]
count =   64, y = 2.8933e+00, ymin = 2.8933e+00, x = [8.3162 0.8981 0.3279]
count =   65, y = 2.8933e+00, ymin = 2.8933e+00, x = [8.5511 1.7413 -0.2887]
count =   66, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.8167 1.1313 -1.1530]
count =   67, y = 2.8933e+00, ymin = 2.8933e+00, x = [8.3398 0.3702 -2.2665]
count =   68, y = 2.8933e+00, ymin = 2.8933e+00, x = [8.0632 1.3645 -2.1028]
count =   69, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.8847 0.9298 -1.6999]
count =   70, y = 2.8933e+00, ymin = 2.8933e+00, x = [8.5927 2.0551 -1.6054]
count =   71, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.5489 1.3874 -2.5853]
count =   72, y = 2.8933e+00, ymin = 2.8933e+00, x = [8.4055 1.1135 -2.8990]
count =   73, y = 2.8933e+00, ymin = 2.8933e+00, x = [8.9276 1.1316 -3.1571]
count =   74, y = 2.8933e+00, ymin = 2.8933e+00, x = [10.1014 1.0996 -3.1353]
count =   75, y = 2.8933e+00, ymin = 2.8933e+00, x = [10.4125 1.0657 -3.2550]
count =   76, y = 2.8933e+00, ymin = 2.8933e+00, x = [9.6069 1.7218 -3.6164]
count =   77, y = 2.8933e+00, ymin = 2.8933e+00, x = [9.1218 1.5191 -4.0366]
count =   78, y = 2.8933e+00, ymin = 2.8933e+00, x = [8.7538 0.8012 -3.5543]
count =   79, y = 2.8933e+00, ymin = 2.8933e+00, x = [8.2789 1.3596 -4.7500]
count =   80, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.6074 1.3000 -3.5509]
count =   81, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.6799 2.3583 -3.8302]
count =   82, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.9851 1.0907 -4.3755]
count =   83, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.0203 0.1283 -4.0640]
count =   84, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.6205 0.0724 -4.5077]
count =   85, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.4607 -1.0457 -5.4715]
count =   86, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.6023 -0.4252 -4.8910]
count =   87, y = 2.8933e+00, ymin = 2.8933e+00, x = [8.3315 -0.4618 -4.6130]
count =   88, y = 2.8933e+00, ymin = 2.8933e+00, x = [8.0103 -0.9715 -5.6868]
count =   89, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.3968 -0.3396 -6.8392]
count =   90, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.2673 -1.6029 -7.7487]
count =   91, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.9569 -1.5520 -9.2274]
count =   92, y = 2.8933e+00, ymin = 2.8933e+00, x = [5.6981 -0.5741 -9.5218]
count =   93, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.5580 -0.8790 -9.2167]
count =   94, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.6538 -0.5792 -9.8773]
count =   95, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.3680 -1.2899 -8.6965]
count =   96, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.2965 -2.4512 -7.1879]
count =   97, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.4196 -2.9251 -6.4789]
count =   98, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.5617 -3.8656 -5.9498]
count =   99, y = 2.8933e+00, ymin = 2.8933e+00, x = [7.1444 -5.4029 -7.3588]
count =  100, y = 2.8933e+00, ymin = 2.8933e+00, x = [6.6320 -6.4243 -8.2745]
count =  101, y = 2.8933e+00, ymin = 2.8933e+00, x = [5.2376 -7.8121 -7.6733]


#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#

#RestrictedSpinLossFunction####################
Loss Function Info:
##################################################################
stdout = <_io.TextIOWrapper name='./log/hub-u-8.0000-nelec-8.log' mode='w' encoding='UTF-8'>
h1e = [[ 0. -1.  0.  0.  0. -1.]
 [-1.  0. -1.  0.  0.  0.]
 [ 0. -1.  0. -1.  0.  0.]
 [ 0.  0. -1.  0. -1.  0.]
 [ 0.  0.  0. -1.  0. -1.]
 [-1.  0.  0.  0. -1.  0.]]
rdm1_tag = [[ 1.33333333  0.40225417 -0.10618866 -0.00432239 -0.10618866  0.40225417]
 [ 0.40225417  1.33333333  0.40225417 -0.10618866 -0.00432239 -0.10618866]
 [-0.10618866  0.40225417  1.33333333  0.40225417 -0.10618866 -0.00432239]
 [-0.00432239 -0.10618866  0.40225417  1.33333333  0.40225417 -0.10618866]
 [-0.10618866 -0.00432239 -0.10618866  0.40225417  1.33333333  0.40225417]
 [ 0.40225417 -0.10618866 -0.00432239 -0.10618866  0.40225417  1.33333333]]
fit_inds = [[0 1 2 3 4 5]]
nelecs = (4, 4)
loss_func_type = 1
ind_triu = (Array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 5],      dtype=int32), Array([0, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 3, 4, 5, 3, 4, 5, 4, 5, 5],      dtype=int32))
num_triu = 21
num_parm = 21
nfrag = 1
nimp = 6
nsite = 6
h1es = [[[ 0. -1.  0.  0.  0. -1.]
  [-1.  0. -1.  0.  0.  0.]
  [ 0. -1.  0. -1.  0.  0.]
  [ 0.  0. -1.  0. -1.  0.]
  [ 0.  0.  0. -1.  0. -1.]
  [-1.  0.  0.  0. -1.  0.]]]
func = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x11acc6200>
grad = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x11acc6ca0>
hess = <function LossFunctionMixin.__init__.<locals>.<lambda> at 0x11acc62a0>
_get_v1es = <function LossFunctionMixin._gen_get_v1es.<locals>.get_v1es at 0x11acc71a0>
_get_rdm1 = <function RestrictedSpinLossFunction._gen_get_rdm1.<locals>.get_rdm1 at 0x11acc4f40>


####################
RestrictedSpinLossFunction
nimp = 6, nsite = 6
nelecs = (4, 4)
loss_func_type = 1
count =    0, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000]
count =    1, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.3165 0.5036 -0.1316 -0.3462 -0.5880 0.2276 0.2809 -0.0709 0.4383 0.4241 0.4369 0.4637 -0.5067 0.2636 0.4088 0.2370 -0.4695 -0.2814 -0.2707 -0.1720 0.3754]
count =    2, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.7464 0.2851 -0.3421 -0.2761 -0.4246 0.1133 0.6244 -0.4858 0.6551 0.8687 0.8493 -0.1216 0.0214 0.2848 0.1209 0.6415 -0.5781 -0.0415 0.2654 -0.7265 0.0733]
count =    3, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.8517 -0.2294 -0.8923 -0.4185 -0.5513 -0.0692 0.9446 -0.4915 0.7406 1.2479 0.2858 0.1984 0.0366 0.7134 0.6917 1.0442 -0.2628 0.4005 -0.0624 -0.2752 -0.0770]
count =    4, y = 1.4692e+00, ymin = 1.4692e+00, x = [-1.0724 -0.5023 -0.6788 -0.1452 -0.5432 -0.4660 1.1448 -0.3556 0.2504 1.4909 -0.1110 0.7629 0.3117 0.2920 0.1604 0.9223 -0.8015 -0.1900 0.2941 0.3084 0.2842]
count =    5, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.8276 -0.0999 -1.2001 0.0507 -1.1146 -0.6675 1.6245 -0.3678 0.3176 1.4035 -0.3749 0.7909 0.5111 0.1630 -0.1348 0.6881 -1.2911 -0.7840 0.0439 -0.2559 -0.2287]
count =    6, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.6082 -0.4524 -1.3444 -0.0945 -0.7705 -0.6644 1.7521 -0.9465 0.7106 1.1845 -0.2298 0.8881 0.6399 0.7595 0.1159 0.2786 -1.0740 -0.9210 0.6397 -0.7091 0.3115]
count =    7, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.0771 -0.3388 -1.5995 -0.0208 -0.8591 -0.9611 2.0001 -1.0191 0.1381 0.6215 -0.2506 1.1650 1.0421 0.9596 -0.1616 0.8714 -1.1008 -1.0707 0.8639 -1.2308 0.0949]
count =    8, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.2896 -0.3091 -1.4274 0.2523 -0.6998 -0.8702 1.4277 -0.6146 -0.3024 0.7222 0.1689 1.1352 0.5158 1.3997 -0.0233 0.4662 -1.0666 -0.6216 1.0798 -0.7010 -0.2142]
count =    9, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.5322 0.1752 -1.1636 0.7447 -1.2041 -0.5088 1.4788 -0.3039 -0.3054 0.1780 0.2289 1.4015 0.5123 1.3718 -0.0420 0.6284 -0.7559 -0.0796 0.5148 -0.1822 0.1244]
count =   10, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.3985 0.3442 -0.5197 1.2908 -1.2965 -0.0210 1.9485 -0.4333 0.2477 -0.1101 0.0941 1.2885 0.5521 1.6447 -0.5134 0.3750 -0.7082 -0.4917 0.6244 -0.1560 0.6284]
count =   11, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.4559 -0.0998 -0.2835 1.6345 -0.9947 0.5517 1.3122 -0.0671 0.3138 0.5438 -0.1206 1.6555 0.1866 1.5000 -0.1562 1.0100 -1.0743 0.0366 1.2620 -0.4558 0.7875]
count =   12, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.4832 0.4310 -0.4147 1.8018 -0.9790 0.0100 1.6753 -0.1155 0.5855 0.8950 0.4715 1.9089 -0.4427 1.8056 -0.0784 1.3810 -1.3793 -0.3379 1.4017 0.0032 1.1739]
count =   13, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.0722 -0.0131 -0.0524 1.2335 -1.4125 0.0101 2.1214 0.3890 0.2580 1.2509 0.5146 1.8149 0.0418 2.4104 -0.1951 0.9872 -1.1662 -0.3322 1.2595 -0.1445 1.5486]
count =   14, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.3165 0.4408 0.4485 0.7739 -1.7207 0.2539 2.3910 -0.1274 0.8868 0.8760 0.7004 2.3921 0.3299 2.3789 -0.5290 0.8460 -1.6483 -0.9040 0.9083 0.3174 1.8432]
count =   15, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.1131 0.4486 -0.0250 0.1880 -1.9570 -0.0073 1.8398 0.4539 1.3499 0.5522 0.9099 2.8983 -0.2395 2.0639 -0.9013 1.0903 -1.6292 -1.2452 1.4978 0.9799 1.3932]
count =   16, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.4235 0.5276 0.5339 0.0615 -2.4041 -0.3019 1.5919 -0.0140 1.2798 -0.0343 0.4491 2.8780 0.1351 1.7145 -1.1950 1.5751 -2.0217 -1.3108 1.7875 1.6094 1.7708]
count =   17, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.0401 0.0337 0.0925 0.4084 -2.5121 0.3056 1.4631 0.3033 1.3613 -0.5211 1.0967 2.5012 0.7516 1.2068 -1.7223 2.0695 -2.4503 -0.9586 1.3305 1.3870 2.2299]
count =   18, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.3402 0.0372 0.4511 -0.1474 -2.8872 0.5261 1.7731 0.2424 1.2194 -0.1990 0.5584 2.0774 0.2835 1.6280 -1.6417 2.1307 -2.9258 -1.5978 1.5147 0.9402 1.8285]
count =   19, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.2314 -0.2577 0.3013 -0.3260 -2.7303 1.1361 1.6074 0.6897 1.2822 -0.2294 0.2539 1.9202 0.6885 1.1497 -2.0677 2.4030 -3.5341 -1.2827 0.9971 1.0796 1.8961]
count =   20, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.9628 -0.0476 -0.1784 0.1164 -3.3010 1.6728 1.2028 0.3911 1.7236 -0.0328 0.0392 2.2614 1.0735 1.8800 -2.0073 2.2949 -4.1968 -1.6043 0.5250 1.1785 1.6578]
count =   21, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.0356 0.5809 0.0100 -0.2240 -3.7965 1.7929 0.5760 0.2508 2.1178 0.2449 0.2965 1.8960 1.6311 1.4914 -1.9732 1.6089 -3.8848 -1.6362 1.1894 0.9627 2.1868]
count =   22, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.3875 0.1375 -0.6753 0.1907 -3.1969 1.8096 0.6926 0.7153 1.6601 -0.2215 0.6432 2.2412 1.7446 1.2496 -2.2885 1.3454 -3.4162 -1.5399 1.6848 0.5900 2.6147]
count =   23, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.3369 -0.2740 -0.3702 0.2156 -3.8776 2.1200 0.9297 0.9392 2.3607 0.1426 -0.0358 1.7085 1.5196 1.1257 -2.4946 1.7610 -3.9396 -2.1852 1.5076 1.0932 3.1726]
count =   24, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.3872 -0.6489 0.0215 -0.3997 -3.2656 1.4326 1.3681 1.5746 1.9885 -0.1819 0.3376 1.4927 1.6477 1.0928 -2.8173 1.6880 -4.6338 -2.0571 2.2093 0.8168 3.6429]
count =   25, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.7065 0.0875 0.5749 0.3282 -3.2696 1.0336 1.4018 1.1331 1.2634 -0.5618 0.7977 1.9190 1.8712 0.8709 -3.1130 1.5307 -4.5008 -1.8163 2.7553 0.6736 4.3750]
count =   26, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.1199 0.3983 0.7809 0.1221 -3.4709 0.8825 1.4023 1.8351 1.9860 -0.0855 1.2568 2.2251 1.1669 1.3420 -3.6420 1.1995 -4.8998 -2.0988 2.0473 0.1314 4.2523]
count =   27, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.5313 0.0762 0.7648 0.2430 -3.6678 0.1582 2.1319 2.3458 2.6733 -0.2336 1.6125 2.6637 0.6820 1.8183 -3.9133 1.9195 -4.3149 -2.3740 2.0303 0.5597 4.7303]
count =   28, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.9959 0.1343 0.9197 -0.1718 -4.1421 0.0394 2.5058 2.3008 2.6815 -0.5780 1.5015 2.5770 0.9444 2.1677 -4.1151 1.6872 -3.6543 -2.5811 1.6196 -0.0368 4.2944]
count =   29, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.9770 0.4084 1.6585 -0.1876 -4.3756 -0.0862 2.4627 1.6596 2.3583 -1.0847 1.1009 2.5297 0.5356 2.1642 -4.6757 1.3937 -3.2573 -3.2751 1.9346 0.4629 4.2116]
count =   30, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.3234 -0.2827 1.0676 -0.1889 -4.2025 0.3683 2.0126 1.2225 3.0724 -0.6593 1.1253 2.8411 -0.2164 1.5033 -4.2114 0.9220 -3.6474 -2.5032 2.6297 0.4867 3.4282]
count =   31, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.8901 -1.0907 0.7061 -0.4706 -4.1484 0.8385 1.2074 1.9114 3.0362 -0.5829 1.8733 2.4850 -0.6868 1.3641 -3.4976 1.3401 -4.1662 -2.8809 2.9184 0.7690 3.9149]
count =   32, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.6463 -1.2091 0.4209 -1.2480 -4.0511 0.6720 1.4473 1.4242 3.2476 -0.8398 2.2432 2.7228 -1.3538 1.5371 -3.5090 2.1549 -4.9504 -3.1892 3.7244 0.6697 4.5874]
count =   33, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.5477 -1.6670 1.2269 -0.6393 -4.4347 0.1377 0.8977 2.0375 3.6958 -1.2536 2.0770 2.8310 -0.5664 2.2520 -4.2068 1.5443 -4.1977 -2.9309 3.8204 0.6263 5.2384]
count =   34, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.9461 -1.1398 0.9861 0.0749 -3.7474 0.0305 1.4907 2.5403 4.2048 -2.0756 2.7127 3.6149 -0.8864 2.6704 -4.7467 1.8225 -4.9382 -2.9289 3.6155 1.2273 4.7785]
count =   35, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.6964 -1.6939 0.4738 0.4580 -3.3847 -0.6586 1.5235 1.9992 4.4909 -2.6416 2.2415 2.8198 -1.2327 3.2274 -4.8093 2.0278 -4.5532 -2.6071 4.2581 1.6994 4.3670]
count =   36, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.1625 -1.7516 0.4006 0.2584 -3.8259 -1.3540 2.2331 1.6932 5.1385 -2.7259 1.5714 2.5592 -0.6350 2.7108 -4.8611 2.1636 -4.9890 -2.4559 3.8915 1.9050 4.7366]
count =   37, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.4146 -2.3036 0.1876 0.5852 -3.5492 -1.4683 1.6018 1.3296 5.1488 -2.3040 2.1650 2.2531 -0.2231 3.1557 -5.6726 1.7816 -5.3753 -2.6350 3.2507 2.5565 5.2405]
count =   38, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.9697 -3.0962 -0.2374 0.4424 -4.2768 -0.7186 2.0455 0.8342 5.6230 -1.8406 2.2623 2.8510 -0.4175 3.4595 -6.1484 1.8629 -4.8151 -1.8650 4.0226 2.4707 4.8439]
count =   39, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.3070 -3.2481 -0.3310 0.3899 -4.8410 -0.3405 2.8182 0.7918 5.4180 -1.7546 2.9918 3.1982 0.1522 3.2711 -5.6401 2.4780 -4.6182 -2.6293 3.6902 2.6939 5.0554]
count =   40, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.7113 -3.3645 -0.3869 -0.1959 -4.8632 -0.7543 2.5746 0.1689 6.2961 -2.0669 2.4579 3.7290 0.0959 4.0225 -6.5374 2.3193 -5.1770 -3.5297 4.5817 2.7196 5.8758]
count =   41, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.0695 -2.9657 -0.4583 -0.6441 -5.4892 -0.8167 2.7507 -0.0720 6.4728 -1.7950 2.0348 3.8908 0.9987 3.7227 -7.0524 2.6128 -5.3098 -4.0065 4.1438 2.5537 5.4507]
count =   42, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.8820 -2.8558 -1.0182 -0.1546 -6.2262 -1.0211 2.3998 0.2968 5.7671 -1.1868 1.1608 4.5040 0.5404 3.8034 -7.5548 3.1082 -5.9740 -3.4197 4.7452 3.0656 5.6993]
count =   43, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.4342 -2.8661 -1.3772 0.2121 -5.5844 -0.6622 2.5808 0.8899 6.3327 -1.3419 1.9470 3.8111 1.0286 3.6024 -7.5843 2.7811 -5.6541 -4.2895 5.1276 2.2701 5.4077]
count =   44, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.5570 -3.7412 -1.0809 -0.4033 -6.3375 -1.2298 2.4174 1.4920 6.7177 -0.4534 2.5498 4.2591 0.7199 3.0802 -7.1746 3.3131 -5.5352 -3.8044 5.5768 2.6389 4.9634]
count =   45, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.9744 -3.6724 -0.4402 -0.5751 -5.9334 -0.6951 2.6570 1.4393 7.0593 -0.5802 2.7929 3.5523 0.9640 2.6076 -6.2885 3.9350 -5.4983 -3.2945 5.8567 2.0652 4.1165]
count =   46, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.1291 -3.5054 -1.2603 -0.6734 -5.7573 -1.3425 3.2140 1.1068 7.0881 0.1347 3.5389 3.4259 0.7279 3.4044 -5.4290 4.2843 -5.3898 -2.8554 5.3565 2.4134 3.6300]
count =   47, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.3367 -3.8918 -0.8805 0.1954 -5.2285 -0.8792 2.3826 1.5740 6.9349 -0.6484 3.5689 2.9943 0.7110 2.5984 -6.0209 3.8247 -4.6734 -2.1679 6.1159 1.7910 2.8386]
count =   48, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.5454 -3.5910 -0.3790 -0.4977 -5.0717 -1.5176 2.9046 1.7120 6.8819 -0.0040 3.0085 3.6426 0.4782 2.7589 -6.7730 4.0874 -4.8557 -2.6175 6.8211 1.2697 3.0526]
count =   49, y = 1.4692e+00, ymin = 1.4692e+00, x = [-0.3287 -3.8381 -0.1079 0.2577 -5.3957 -2.1390 2.6143 1.6865 7.7043 0.2357 2.8145 3.2108 0.4021 2.8574 -6.9673 3.4956 -4.8542 -2.1475 7.4378 1.9524 3.6742]
count =   50, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.3742 -2.9801 0.5414 0.2787 -4.4442 -2.7521 2.4941 2.6425 8.4870 -0.6908 1.8197 4.0818 0.8059 3.3662 -6.0953 2.8085 -5.8301 -1.9614 7.5429 2.6518 3.7906]
count =   51, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.6498 -3.8883 0.1072 0.1329 -5.2592 -2.3306 1.6483 2.6484 9.2337 -0.1847 1.7317 4.0124 1.4391 2.8892 -5.1612 3.7901 -5.0095 -2.9435 6.6310 2.9509 4.6503]
count =   52, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.5002 -4.7595 0.0296 -0.5853 -5.6667 -2.9226 1.3153 1.8745 8.3237 0.1939 1.5284 3.2977 1.1550 2.1606 -5.0784 3.2830 -4.8178 -2.2727 6.4235 2.2897 5.3474]
count =   53, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.1463 -5.5805 -0.5293 0.1504 -6.2599 -1.9495 2.1518 2.1442 8.9479 0.5821 1.2694 2.3002 0.2740 1.2977 -5.3401 3.5842 -4.5425 -2.0817 6.3978 2.3541 5.9695]
count =   54, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.0102 -4.9473 0.1231 0.3152 -7.1074 -1.4403 3.0899 3.1457 8.9235 1.2917 1.4638 2.5524 0.6544 1.0674 -5.2614 4.1000 -4.5696 -1.1411 5.8571 1.8729 6.3198]
count =   55, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.6142 -5.2596 -0.3480 1.2245 -7.3150 -0.9844 2.4144 2.1662 8.9608 1.2940 2.3555 1.7817 0.2614 0.6520 -5.8719 4.6254 -5.1221 -2.0125 6.2270 1.3579 6.2336]
count =   56, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.9840 -5.8702 -1.3219 1.1882 -6.5848 -0.2630 3.1513 2.3123 9.6561 1.0553 3.0297 2.6499 0.3169 1.6230 -5.9381 4.9695 -5.3927 -2.7268 6.4950 0.6292 5.5497]
count =   57, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.7295 -6.7812 -1.4898 0.7293 -5.5954 0.7262 4.0602 1.5721 10.0132 2.0639 2.2284 2.9234 -0.2379 2.1450 -5.9240 5.2560 -5.9503 -2.1376 6.5242 0.9931 6.1796]
count =   58, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.5878 -6.8621 -1.0182 1.0913 -4.9649 1.5951 4.4305 2.1439 9.1229 2.8877 2.8407 3.5566 0.1360 3.0103 -6.2731 4.3754 -6.0353 -1.1331 6.4288 0.1848 5.2300]
count =   59, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.1664 -6.7873 -0.4822 0.3902 -4.6530 1.0687 3.8063 2.6730 9.8454 3.8402 3.1107 4.1006 1.1357 2.1321 -5.6338 3.9794 -5.7683 -1.4761 6.9167 -0.4644 5.5013]
count =   60, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.0702 -7.0683 0.5469 -0.5955 -5.6294 1.5842 4.3375 1.8479 10.2219 2.7525 2.9572 4.6513 1.0008 1.9487 -4.5666 3.5959 -5.2630 -2.1027 7.3193 -0.1931 5.8185]
count =   61, y = 1.4692e+00, ymin = 1.4692e+00, x = [0.7671 -7.8514 0.7822 -1.2923 -5.7168 2.5979 5.3818 2.4326 10.2188 1.9915 3.2865 5.7676 1.6196 1.4920 -4.2196 2.9716 -5.6640 -2.3180 7.1310 0.6422 5.3622]
count =   62, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.3317 -8.6396 0.6641 -0.4840 -5.0940 3.4331 5.2395 2.1851 9.6464 2.6120 2.7005 6.0941 2.1282 2.4300 -4.6458 3.3068 -4.5405 -3.0966 6.1922 0.1407 6.0550]
count =   63, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.7564 -9.2746 -0.0324 -1.0163 -6.0910 2.9955 5.2451 2.5776 9.4801 1.8459 2.4496 5.6554 2.9239 3.4468 -4.8128 2.2148 -3.8789 -3.4961 6.6714 0.7439 5.6171]
count =   64, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.7257 -8.6261 0.5576 -0.1006 -7.1834 2.1628 4.9120 3.1102 8.7375 2.3962 1.8011 5.2489 2.0251 3.7127 -4.2289 2.2981 -4.1658 -2.5096 6.6142 0.6590 6.7151]
count =   65, y = 1.4692e+00, ymin = 1.4692e+00, x = [1.7192 -8.1022 1.5640 -0.8677 -8.1565 2.0198 4.2145 4.0175 9.5935 1.3971 2.4574 5.3993 1.4072 3.6743 -4.2857 2.6406 -4.7243 -2.5306 5.7682 1.0581 6.8004]
count =   66, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.2207 -8.6551 1.2671 -0.5321 -9.2109 2.6988 4.2067 3.0785 10.7053 1.3708 1.6164 4.5378 1.4846 3.3501 -4.5801 2.2391 -5.5126 -2.4263 5.8148 0.0171 6.5596]
count =   67, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.8486 -8.7982 0.1729 -0.3265 -8.3344 3.6095 5.3308 3.1254 9.5946 2.4383 2.4025 4.6443 0.5964 3.5858 -4.8329 3.2839 -4.7261 -1.4805 6.0728 -0.8952 6.2245]
count =   68, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.0400 -7.9283 1.1384 0.6521 -7.2357 3.8555 5.2069 3.2737 10.5486 2.8414 2.6128 3.6955 0.1309 2.7238 -5.1163 2.6813 -4.1785 -0.6978 7.0789 -1.3165 6.9443]
count =   69, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.8915 -7.8566 0.5793 1.3276 -6.1616 4.0346 5.0424 4.1058 10.4819 3.6718 3.2566 2.8828 1.0236 3.8477 -4.6595 2.6396 -3.7152 -0.5759 7.9709 -1.9297 6.9892]
count =   70, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.9907 -6.6726 0.5479 2.1921 -6.6758 2.8767 4.1715 3.6923 10.1324 3.5757 3.9755 3.4669 0.5305 5.0144 -5.6641 1.6303 -3.1943 -0.5415 7.2343 -2.2282 7.0327]
count =   71, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.2932 -5.7627 0.2579 3.3053 -7.2920 2.8580 3.2467 4.6402 11.0396 2.8703 3.2541 2.5795 0.2621 3.8943 -6.4036 2.2554 -3.2565 -0.5082 7.9293 -1.7071 7.8630]
count =   72, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.6909 -4.8729 -0.4936 3.4907 -6.8785 1.8646 2.9635 4.6579 11.2955 3.0050 3.5682 2.4883 0.3945 3.5457 -6.7329 2.6772 -2.5167 0.1011 8.0130 -2.9190 8.7402]
count =   73, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.4661 -5.3608 0.1529 3.4788 -5.9472 1.0183 3.6774 5.8978 10.9161 3.2500 4.4346 3.6928 -0.0880 2.9795 -5.9751 1.8220 -2.7214 1.1817 8.2257 -2.4230 9.1777]
count =   74, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.7469 -5.4568 -0.9542 3.5058 -4.7170 -0.2297 4.3975 7.0723 10.6743 3.0586 5.6065 4.6065 0.4730 2.5705 -5.4378 2.0888 -3.4709 0.0840 8.4298 -3.3540 8.8258]
count =   75, y = 1.4692e+00, ymin = 1.4692e+00, x = [4.0663 -4.5085 0.2943 3.5686 -5.5065 -1.3168 4.2672 7.5291 9.8626 2.9571 4.4435 5.4782 0.4800 1.6523 -4.8779 2.4619 -4.6844 -0.0796 7.7124 -4.3363 9.1535]
count =   76, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.9763 -3.5021 1.3816 3.2133 -4.4898 -2.3041 4.9063 7.4174 10.6774 3.4647 4.9936 5.6882 -0.4923 2.6387 -4.9137 3.6766 -4.0059 0.8113 7.4820 -3.1014 8.1854]
count =   77, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.0133 -4.6004 0.3789 3.9161 -4.9760 -1.4337 5.5348 8.5546 10.0299 2.5425 3.7529 6.2758 0.2175 3.3363 -5.0249 3.7224 -2.8191 0.7612 6.2840 -2.5914 8.7569]
count =   78, y = 1.4692e+00, ymin = 1.4692e+00, x = [4.0591 -3.8007 -0.6974 4.9866 -6.1315 -1.4327 5.9266 8.7973 10.7153 3.4720 2.8221 5.0783 0.2473 3.7746 -5.7701 3.5202 -3.8427 1.8015 6.1868 -3.4020 7.7189]
count =   79, y = 1.4692e+00, ymin = 1.4692e+00, x = [4.8804 -4.2728 0.2656 4.5664 -5.0960 -0.5017 5.2319 9.9153 11.6518 4.0084 2.6664 6.2427 -0.4637 4.0066 -5.8036 3.1956 -4.4364 1.5160 6.7562 -2.6969 8.0752]
count =   80, y = 1.4692e+00, ymin = 1.4692e+00, x = [4.5378 -4.5090 0.6085 4.6642 -4.5231 -0.8750 5.6560 10.7259 12.1628 4.2170 1.4912 7.2355 -0.2961 3.9791 -5.8859 2.2517 -4.7959 0.4383 6.3998 -2.1269 7.6226]
count =   81, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.7194 -4.5270 1.0466 6.0030 -3.7832 -0.0175 7.0213 9.8258 12.8667 4.0172 2.7796 6.0378 -0.8773 2.8732 -5.9583 3.2857 -5.7122 1.0320 7.2669 -3.3330 6.8944]
count =   82, y = 1.4692e+00, ymin = 1.4692e+00, x = [4.6606 -4.0234 0.6272 7.0393 -3.1453 -0.9990 6.1761 10.3628 11.8024 3.5584 3.2614 6.3490 -1.5529 3.2196 -6.8740 3.8668 -6.3154 2.3201 7.3114 -4.0343 6.7503]
count =   83, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.7284 -4.5383 1.6919 8.3827 -3.1363 -2.1281 5.4919 9.4653 10.5566 2.6627 2.4918 7.3366 -0.3299 3.1224 -7.8503 4.8987 -7.0832 1.7794 7.9733 -4.3151 6.3979]
count =   84, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.6875 -3.1686 0.9667 9.1550 -4.1703 -0.9675 6.2030 8.3070 10.4375 3.9146 3.1481 8.0347 0.2696 4.4832 -7.9539 5.5916 -7.2655 0.8210 7.0945 -3.7618 5.9431]
count =   85, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.9984 -2.7181 2.0387 10.3940 -3.9240 0.4144 6.9412 7.5966 11.4406 4.7927 2.2575 8.9806 -0.0760 5.5805 -8.7586 5.7217 -6.3455 1.1404 7.7466 -2.8848 6.1489]
count =   86, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.3591 -2.1832 2.0198 10.5863 -4.0636 1.6429 6.5253 7.4189 12.7217 3.4255 1.2055 8.2106 0.2609 5.1772 -8.7922 5.8422 -6.1446 1.0267 7.0729 -3.1999 7.4740]
count =   87, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.3687 -0.8939 1.0062 11.3708 -2.7937 0.4851 6.8947 7.0993 11.4306 2.2812 1.9987 7.0910 0.3158 6.5454 -9.9882 4.6027 -6.4392 1.7898 7.4008 -3.4635 7.9720]
count =   88, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.0846 -2.0529 0.0300 11.8405 -1.8051 0.2529 7.3838 7.7616 12.6175 3.4941 2.3058 7.5022 -0.4575 5.5672 -10.2292 5.9355 -5.7171 0.4446 6.0856 -3.1486 8.3799]
count =   89, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.5522 -1.1302 1.0682 10.8979 -2.2130 0.1428 7.0711 6.7119 11.5851 4.8819 2.0480 6.4722 -0.6455 6.4289 -11.0397 5.5459 -6.7722 1.6573 6.6317 -3.4649 7.0095]
count =   90, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.1520 -0.9745 0.6096 10.5693 -1.1654 0.8795 7.9933 7.9384 11.7957 4.1993 1.2675 5.4110 -1.4091 7.3511 -9.9443 6.2654 -5.7047 3.1512 6.9071 -2.4542 5.9216]
count =   91, y = 1.4692e+00, ymin = 1.4692e+00, x = [2.1636 0.5230 -0.5902 12.0849 -0.6161 -0.4699 6.9401 8.5049 11.7981 4.9601 2.2211 6.6174 -1.5494 7.6555 -9.2072 6.4142 -5.2087 3.0765 6.3508 -1.5863 4.6824]
count =   92, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.3268 0.9890 0.7808 12.2389 -2.0763 0.1599 7.5350 8.6397 12.7310 3.4661 3.7154 7.7228 -1.0475 7.2211 -10.3681 5.7723 -5.8902 3.4964 7.5944 -0.7636 3.9751]
count =   93, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.9979 2.3331 0.2921 12.9829 -2.8359 -1.0006 8.1234 7.2919 12.2922 3.5429 4.4374 6.2551 -0.1531 8.5673 -9.9342 4.8464 -7.0817 4.9510 7.2088 -0.2171 3.0785]
count =   94, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.0648 3.3531 1.0606 12.0832 -1.9076 0.4176 6.9973 6.8207 13.4463 3.3183 3.0026 6.5143 -0.1833 10.0994 -9.5970 6.1943 -6.7764 5.9375 7.1212 0.5434 3.2827]
count =   95, y = 1.4692e+00, ymin = 1.4692e+00, x = [4.5013 1.9118 -0.3518 12.0551 -3.3161 1.5513 6.2847 6.3446 13.6756 3.7024 3.8073 5.9162 0.7024 9.9828 -8.1633 6.5385 -6.3656 7.3908 6.0199 0.1377 1.9241]
count =   96, y = 1.4692e+00, ymin = 1.4692e+00, x = [3.8141 2.8606 -0.9611 11.4518 -2.4274 1.7386 7.0926 4.9426 14.0351 3.7003 4.6663 6.4670 0.2180 9.8833 -7.3684 6.5865 -7.7904 8.0271 4.5789 -1.3058 0.7075]
count =   97, y = 1.4692e+00, ymin = 1.4692e+00, x = [4.1369 2.8470 -1.6459 10.4073 -1.8418 3.2805 7.5392 5.6507 14.7428 4.1183 3.3366 7.0741 0.2559 9.7333 -7.6048 5.7560 -6.7951 9.4523 6.0551 -1.7244 -0.0305]
count =   98, y = 1.4692e+00, ymin = 1.4692e+00, x = [4.5998 3.0906 -1.3556 9.9749 -1.9154 4.2806 8.9023 4.1063 13.3071 3.4337 3.1952 5.7160 -1.0801 9.1926 -7.4962 6.7761 -7.8717 9.2982 6.3312 -0.9403 -0.1160]
count =   99, y = 1.4692e+00, ymin = 1.4692e+00, x = [5.9573 2.5683 -2.3578 9.2778 -2.6801 5.7493 8.0746 5.0451 11.9209 3.8479 4.3774 5.2821 -2.3705 8.1281 -8.4837 5.6872 -8.8311 8.2672 6.3417 0.3757 0.1542]
count =  100, y = 1.4692e+00, ymin = 1.4692e+00, x = [6.5085 2.2610 -1.3127 7.9412 -2.5255 4.7600 7.8001 5.0633 12.7274 4.0596 5.5446 5.2361 -2.2922 7.4630 -7.8045 4.3291 -10.1191 9.2146 7.0901 0.3999 1.7593]
count =  101, y = 1.4692e+00, ymin = 1.4692e+00, x = [7.6571 1.4832 -1.3591 6.9706 -2.2612 4.0628 7.5226 5.2081 11.4007 4.0839 5.8849 5.9547 -3.2651 8.1675 -7.9581 3.5458 -11.5081 9.1723 6.4010 -1.0262 0.4570]
